// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

type CreateGroupReq struct {
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
	Setting     string    `json:"setting"`
	Users       []string  `json:"users"`
	Owner       OptString `json:"owner"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateGroupReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateGroupReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateGroupReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateGroupReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *CreateGroupReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateGroupReq) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *CreateGroupReq) GetLogoURL() string {
	return s.LogoURL
}

// GetSetting returns the value of Setting.
func (s *CreateGroupReq) GetSetting() string {
	return s.Setting
}

// GetUsers returns the value of Users.
func (s *CreateGroupReq) GetUsers() []string {
	return s.Users
}

// GetOwner returns the value of Owner.
func (s *CreateGroupReq) GetOwner() OptString {
	return s.Owner
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateGroupReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateGroupReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateGroupReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateGroupReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *CreateGroupReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateGroupReq) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *CreateGroupReq) SetLogoURL(val string) {
	s.LogoURL = val
}

// SetSetting sets the value of Setting.
func (s *CreateGroupReq) SetSetting(val string) {
	s.Setting = val
}

// SetUsers sets the value of Users.
func (s *CreateGroupReq) SetUsers(val []string) {
	s.Users = val
}

// SetOwner sets the value of Owner.
func (s *CreateGroupReq) SetOwner(val OptString) {
	s.Owner = val
}

type CreateGroupSettingsReq struct {
	CreatedAt  time.Time                        `json:"created_at"`
	UpdatedAt  time.Time                        `json:"updated_at"`
	CreatedBy  OptString                        `json:"created_by"`
	UpdatedBy  OptString                        `json:"updated_by"`
	Visibility CreateGroupSettingsReqVisibility `json:"visibility"`
	JoinPolicy CreateGroupSettingsReqJoinPolicy `json:"join_policy"`
	Group      OptString                        `json:"group"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateGroupSettingsReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateGroupSettingsReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateGroupSettingsReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateGroupSettingsReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *CreateGroupSettingsReq) GetVisibility() CreateGroupSettingsReqVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *CreateGroupSettingsReq) GetJoinPolicy() CreateGroupSettingsReqJoinPolicy {
	return s.JoinPolicy
}

// GetGroup returns the value of Group.
func (s *CreateGroupSettingsReq) GetGroup() OptString {
	return s.Group
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateGroupSettingsReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateGroupSettingsReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateGroupSettingsReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateGroupSettingsReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *CreateGroupSettingsReq) SetVisibility(val CreateGroupSettingsReqVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *CreateGroupSettingsReq) SetJoinPolicy(val CreateGroupSettingsReqJoinPolicy) {
	s.JoinPolicy = val
}

// SetGroup sets the value of Group.
func (s *CreateGroupSettingsReq) SetGroup(val OptString) {
	s.Group = val
}

type CreateGroupSettingsReqJoinPolicy string

const (
	CreateGroupSettingsReqJoinPolicyOPEN                CreateGroupSettingsReqJoinPolicy = "OPEN"
	CreateGroupSettingsReqJoinPolicyINVITEONLY          CreateGroupSettingsReqJoinPolicy = "INVITE_ONLY"
	CreateGroupSettingsReqJoinPolicyAPPLICATIONONLY     CreateGroupSettingsReqJoinPolicy = "APPLICATION_ONLY"
	CreateGroupSettingsReqJoinPolicyINVITEORAPPLICATION CreateGroupSettingsReqJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all CreateGroupSettingsReqJoinPolicy values.
func (CreateGroupSettingsReqJoinPolicy) AllValues() []CreateGroupSettingsReqJoinPolicy {
	return []CreateGroupSettingsReqJoinPolicy{
		CreateGroupSettingsReqJoinPolicyOPEN,
		CreateGroupSettingsReqJoinPolicyINVITEONLY,
		CreateGroupSettingsReqJoinPolicyAPPLICATIONONLY,
		CreateGroupSettingsReqJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateGroupSettingsReqJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case CreateGroupSettingsReqJoinPolicyOPEN:
		return []byte(s), nil
	case CreateGroupSettingsReqJoinPolicyINVITEONLY:
		return []byte(s), nil
	case CreateGroupSettingsReqJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case CreateGroupSettingsReqJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateGroupSettingsReqJoinPolicy) UnmarshalText(data []byte) error {
	switch CreateGroupSettingsReqJoinPolicy(data) {
	case CreateGroupSettingsReqJoinPolicyOPEN:
		*s = CreateGroupSettingsReqJoinPolicyOPEN
		return nil
	case CreateGroupSettingsReqJoinPolicyINVITEONLY:
		*s = CreateGroupSettingsReqJoinPolicyINVITEONLY
		return nil
	case CreateGroupSettingsReqJoinPolicyAPPLICATIONONLY:
		*s = CreateGroupSettingsReqJoinPolicyAPPLICATIONONLY
		return nil
	case CreateGroupSettingsReqJoinPolicyINVITEORAPPLICATION:
		*s = CreateGroupSettingsReqJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateGroupSettingsReqVisibility string

const (
	CreateGroupSettingsReqVisibilityPUBLIC  CreateGroupSettingsReqVisibility = "PUBLIC"
	CreateGroupSettingsReqVisibilityPRIVATE CreateGroupSettingsReqVisibility = "PRIVATE"
)

// AllValues returns all CreateGroupSettingsReqVisibility values.
func (CreateGroupSettingsReqVisibility) AllValues() []CreateGroupSettingsReqVisibility {
	return []CreateGroupSettingsReqVisibility{
		CreateGroupSettingsReqVisibilityPUBLIC,
		CreateGroupSettingsReqVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateGroupSettingsReqVisibility) MarshalText() ([]byte, error) {
	switch s {
	case CreateGroupSettingsReqVisibilityPUBLIC:
		return []byte(s), nil
	case CreateGroupSettingsReqVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateGroupSettingsReqVisibility) UnmarshalText(data []byte) error {
	switch CreateGroupSettingsReqVisibility(data) {
	case CreateGroupSettingsReqVisibilityPUBLIC:
		*s = CreateGroupSettingsReqVisibilityPUBLIC
		return nil
	case CreateGroupSettingsReqVisibilityPRIVATE:
		*s = CreateGroupSettingsReqVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateIntegrationReq struct {
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
	Owner       OptString `json:"owner"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateIntegrationReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateIntegrationReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateIntegrationReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateIntegrationReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *CreateIntegrationReq) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *CreateIntegrationReq) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *CreateIntegrationReq) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *CreateIntegrationReq) GetSecretName() string {
	return s.SecretName
}

// GetOwner returns the value of Owner.
func (s *CreateIntegrationReq) GetOwner() OptString {
	return s.Owner
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateIntegrationReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateIntegrationReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateIntegrationReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateIntegrationReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *CreateIntegrationReq) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *CreateIntegrationReq) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *CreateIntegrationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *CreateIntegrationReq) SetSecretName(val string) {
	s.SecretName = val
}

// SetOwner sets the value of Owner.
func (s *CreateIntegrationReq) SetOwner(val OptString) {
	s.Owner = val
}

type CreateOrganizationReq struct {
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
	Parent               OptString `json:"parent"`
	Children             []string  `json:"children"`
	Users                []string  `json:"users"`
	Groups               []string  `json:"groups"`
	Integrations         []string  `json:"integrations"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateOrganizationReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateOrganizationReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateOrganizationReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateOrganizationReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *CreateOrganizationReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateOrganizationReq) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *CreateOrganizationReq) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// GetParent returns the value of Parent.
func (s *CreateOrganizationReq) GetParent() OptString {
	return s.Parent
}

// GetChildren returns the value of Children.
func (s *CreateOrganizationReq) GetChildren() []string {
	return s.Children
}

// GetUsers returns the value of Users.
func (s *CreateOrganizationReq) GetUsers() []string {
	return s.Users
}

// GetGroups returns the value of Groups.
func (s *CreateOrganizationReq) GetGroups() []string {
	return s.Groups
}

// GetIntegrations returns the value of Integrations.
func (s *CreateOrganizationReq) GetIntegrations() []string {
	return s.Integrations
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateOrganizationReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateOrganizationReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateOrganizationReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateOrganizationReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *CreateOrganizationReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateOrganizationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *CreateOrganizationReq) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

// SetParent sets the value of Parent.
func (s *CreateOrganizationReq) SetParent(val OptString) {
	s.Parent = val
}

// SetChildren sets the value of Children.
func (s *CreateOrganizationReq) SetChildren(val []string) {
	s.Children = val
}

// SetUsers sets the value of Users.
func (s *CreateOrganizationReq) SetUsers(val []string) {
	s.Users = val
}

// SetGroups sets the value of Groups.
func (s *CreateOrganizationReq) SetGroups(val []string) {
	s.Groups = val
}

// SetIntegrations sets the value of Integrations.
func (s *CreateOrganizationReq) SetIntegrations(val []string) {
	s.Integrations = val
}

type CreateSessionReq struct {
	CreatedAt time.Time            `json:"created_at"`
	UpdatedAt time.Time            `json:"updated_at"`
	CreatedBy OptString            `json:"created_by"`
	UpdatedBy OptString            `json:"updated_by"`
	Type      CreateSessionReqType `json:"type"`
	Disabled  bool                 `json:"disabled"`
	Token     string               `json:"token"`
	UserAgent OptString            `json:"user_agent"`
	Ips       string               `json:"ips"`
	Users     OptString            `json:"users"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateSessionReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateSessionReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateSessionReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateSessionReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *CreateSessionReq) GetType() CreateSessionReqType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *CreateSessionReq) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *CreateSessionReq) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *CreateSessionReq) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *CreateSessionReq) GetIps() string {
	return s.Ips
}

// GetUsers returns the value of Users.
func (s *CreateSessionReq) GetUsers() OptString {
	return s.Users
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateSessionReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateSessionReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateSessionReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateSessionReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *CreateSessionReq) SetType(val CreateSessionReqType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *CreateSessionReq) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *CreateSessionReq) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *CreateSessionReq) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *CreateSessionReq) SetIps(val string) {
	s.Ips = val
}

// SetUsers sets the value of Users.
func (s *CreateSessionReq) SetUsers(val OptString) {
	s.Users = val
}

type CreateSessionReqType string

const (
	CreateSessionReqTypeLocal       CreateSessionReqType = "local"
	CreateSessionReqTypeOAuth       CreateSessionReqType = "oauth"
	CreateSessionReqTypeAppPassword CreateSessionReqType = "app_password"
)

// AllValues returns all CreateSessionReqType values.
func (CreateSessionReqType) AllValues() []CreateSessionReqType {
	return []CreateSessionReqType{
		CreateSessionReqTypeLocal,
		CreateSessionReqTypeOAuth,
		CreateSessionReqTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateSessionReqType) MarshalText() ([]byte, error) {
	switch s {
	case CreateSessionReqTypeLocal:
		return []byte(s), nil
	case CreateSessionReqTypeOAuth:
		return []byte(s), nil
	case CreateSessionReqTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateSessionReqType) UnmarshalText(data []byte) error {
	switch CreateSessionReqType(data) {
	case CreateSessionReqTypeLocal:
		*s = CreateSessionReqTypeLocal
		return nil
	case CreateSessionReqTypeOAuth:
		*s = CreateSessionReqTypeOAuth
		return nil
	case CreateSessionReqTypeAppPassword:
		*s = CreateSessionReqTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateUserReq struct {
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
	RecoveryCode    OptString   `json:"recovery_code"`
	Organizations   []string    `json:"organizations"`
	Sessions        []string    `json:"sessions"`
	Groups          []string    `json:"groups"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateUserReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *CreateUserReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *CreateUserReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *CreateUserReq) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *CreateUserReq) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateUserReq) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *CreateUserReq) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *CreateUserReq) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *CreateUserReq) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *CreateUserReq) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *CreateUserReq) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *CreateUserReq) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// GetRecoveryCode returns the value of RecoveryCode.
func (s *CreateUserReq) GetRecoveryCode() OptString {
	return s.RecoveryCode
}

// GetOrganizations returns the value of Organizations.
func (s *CreateUserReq) GetOrganizations() []string {
	return s.Organizations
}

// GetSessions returns the value of Sessions.
func (s *CreateUserReq) GetSessions() []string {
	return s.Sessions
}

// GetGroups returns the value of Groups.
func (s *CreateUserReq) GetGroups() []string {
	return s.Groups
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateUserReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *CreateUserReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *CreateUserReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *CreateUserReq) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *CreateUserReq) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateUserReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *CreateUserReq) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *CreateUserReq) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *CreateUserReq) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *CreateUserReq) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *CreateUserReq) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *CreateUserReq) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

// SetRecoveryCode sets the value of RecoveryCode.
func (s *CreateUserReq) SetRecoveryCode(val OptString) {
	s.RecoveryCode = val
}

// SetOrganizations sets the value of Organizations.
func (s *CreateUserReq) SetOrganizations(val []string) {
	s.Organizations = val
}

// SetSessions sets the value of Sessions.
func (s *CreateUserReq) SetSessions(val []string) {
	s.Sessions = val
}

// SetGroups sets the value of Groups.
func (s *CreateUserReq) SetGroups(val []string) {
	s.Groups = val
}

// DeleteGroupNoContent is response for DeleteGroup operation.
type DeleteGroupNoContent struct{}

func (*DeleteGroupNoContent) deleteGroupRes() {}

// DeleteGroupSettingsNoContent is response for DeleteGroupSettings operation.
type DeleteGroupSettingsNoContent struct{}

func (*DeleteGroupSettingsNoContent) deleteGroupSettingsRes() {}

// DeleteIntegrationNoContent is response for DeleteIntegration operation.
type DeleteIntegrationNoContent struct{}

func (*DeleteIntegrationNoContent) deleteIntegrationRes() {}

// DeleteOrganizationNoContent is response for DeleteOrganization operation.
type DeleteOrganizationNoContent struct{}

func (*DeleteOrganizationNoContent) deleteOrganizationRes() {}

// DeleteSessionNoContent is response for DeleteSession operation.
type DeleteSessionNoContent struct{}

func (*DeleteSessionNoContent) deleteSessionRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/GroupCreate
type GroupCreate struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *GroupCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupCreate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupCreate) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *GroupCreate) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *GroupCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupCreate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupCreate) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *GroupCreate) SetLogoURL(val string) {
	s.LogoURL = val
}

func (*GroupCreate) createGroupRes() {}

// Ref: #/components/schemas/GroupList
type GroupList struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *GroupList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupList) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *GroupList) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *GroupList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupList) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *GroupList) SetLogoURL(val string) {
	s.LogoURL = val
}

// Ref: #/components/schemas/Group_OwnerRead
type GroupOwnerRead struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *GroupOwnerRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupOwnerRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupOwnerRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupOwnerRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupOwnerRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupOwnerRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupOwnerRead) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *GroupOwnerRead) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *GroupOwnerRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupOwnerRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupOwnerRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupOwnerRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupOwnerRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupOwnerRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupOwnerRead) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *GroupOwnerRead) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*GroupOwnerRead) readGroupOwnerRes() {}

// Ref: #/components/schemas/GroupRead
type GroupRead struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *GroupRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupRead) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *GroupRead) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *GroupRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupRead) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *GroupRead) SetLogoURL(val string) {
	s.LogoURL = val
}

func (*GroupRead) readGroupRes() {}

// Ref: #/components/schemas/Group_SettingRead
type GroupSettingRead struct {
	ID         string                     `json:"id"`
	CreatedAt  time.Time                  `json:"created_at"`
	UpdatedAt  time.Time                  `json:"updated_at"`
	CreatedBy  OptString                  `json:"created_by"`
	UpdatedBy  OptString                  `json:"updated_by"`
	Visibility GroupSettingReadVisibility `json:"visibility"`
	JoinPolicy GroupSettingReadJoinPolicy `json:"join_policy"`
}

// GetID returns the value of ID.
func (s *GroupSettingRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *GroupSettingRead) GetVisibility() GroupSettingReadVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *GroupSettingRead) GetJoinPolicy() GroupSettingReadJoinPolicy {
	return s.JoinPolicy
}

// SetID sets the value of ID.
func (s *GroupSettingRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *GroupSettingRead) SetVisibility(val GroupSettingReadVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *GroupSettingRead) SetJoinPolicy(val GroupSettingReadJoinPolicy) {
	s.JoinPolicy = val
}

func (*GroupSettingRead) readGroupSettingRes() {}

type GroupSettingReadJoinPolicy string

const (
	GroupSettingReadJoinPolicyOPEN                GroupSettingReadJoinPolicy = "OPEN"
	GroupSettingReadJoinPolicyINVITEONLY          GroupSettingReadJoinPolicy = "INVITE_ONLY"
	GroupSettingReadJoinPolicyAPPLICATIONONLY     GroupSettingReadJoinPolicy = "APPLICATION_ONLY"
	GroupSettingReadJoinPolicyINVITEORAPPLICATION GroupSettingReadJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all GroupSettingReadJoinPolicy values.
func (GroupSettingReadJoinPolicy) AllValues() []GroupSettingReadJoinPolicy {
	return []GroupSettingReadJoinPolicy{
		GroupSettingReadJoinPolicyOPEN,
		GroupSettingReadJoinPolicyINVITEONLY,
		GroupSettingReadJoinPolicyAPPLICATIONONLY,
		GroupSettingReadJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingReadJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingReadJoinPolicyOPEN:
		return []byte(s), nil
	case GroupSettingReadJoinPolicyINVITEONLY:
		return []byte(s), nil
	case GroupSettingReadJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case GroupSettingReadJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingReadJoinPolicy) UnmarshalText(data []byte) error {
	switch GroupSettingReadJoinPolicy(data) {
	case GroupSettingReadJoinPolicyOPEN:
		*s = GroupSettingReadJoinPolicyOPEN
		return nil
	case GroupSettingReadJoinPolicyINVITEONLY:
		*s = GroupSettingReadJoinPolicyINVITEONLY
		return nil
	case GroupSettingReadJoinPolicyAPPLICATIONONLY:
		*s = GroupSettingReadJoinPolicyAPPLICATIONONLY
		return nil
	case GroupSettingReadJoinPolicyINVITEORAPPLICATION:
		*s = GroupSettingReadJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GroupSettingReadVisibility string

const (
	GroupSettingReadVisibilityPUBLIC  GroupSettingReadVisibility = "PUBLIC"
	GroupSettingReadVisibilityPRIVATE GroupSettingReadVisibility = "PRIVATE"
)

// AllValues returns all GroupSettingReadVisibility values.
func (GroupSettingReadVisibility) AllValues() []GroupSettingReadVisibility {
	return []GroupSettingReadVisibility{
		GroupSettingReadVisibilityPUBLIC,
		GroupSettingReadVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingReadVisibility) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingReadVisibilityPUBLIC:
		return []byte(s), nil
	case GroupSettingReadVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingReadVisibility) UnmarshalText(data []byte) error {
	switch GroupSettingReadVisibility(data) {
	case GroupSettingReadVisibilityPUBLIC:
		*s = GroupSettingReadVisibilityPUBLIC
		return nil
	case GroupSettingReadVisibilityPRIVATE:
		*s = GroupSettingReadVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GroupSettingsCreate
type GroupSettingsCreate struct {
	ID         string                        `json:"id"`
	CreatedAt  time.Time                     `json:"created_at"`
	UpdatedAt  time.Time                     `json:"updated_at"`
	CreatedBy  OptString                     `json:"created_by"`
	UpdatedBy  OptString                     `json:"updated_by"`
	Visibility GroupSettingsCreateVisibility `json:"visibility"`
	JoinPolicy GroupSettingsCreateJoinPolicy `json:"join_policy"`
}

// GetID returns the value of ID.
func (s *GroupSettingsCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingsCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingsCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingsCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingsCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *GroupSettingsCreate) GetVisibility() GroupSettingsCreateVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *GroupSettingsCreate) GetJoinPolicy() GroupSettingsCreateJoinPolicy {
	return s.JoinPolicy
}

// SetID sets the value of ID.
func (s *GroupSettingsCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingsCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingsCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingsCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingsCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *GroupSettingsCreate) SetVisibility(val GroupSettingsCreateVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *GroupSettingsCreate) SetJoinPolicy(val GroupSettingsCreateJoinPolicy) {
	s.JoinPolicy = val
}

func (*GroupSettingsCreate) createGroupSettingsRes() {}

type GroupSettingsCreateJoinPolicy string

const (
	GroupSettingsCreateJoinPolicyOPEN                GroupSettingsCreateJoinPolicy = "OPEN"
	GroupSettingsCreateJoinPolicyINVITEONLY          GroupSettingsCreateJoinPolicy = "INVITE_ONLY"
	GroupSettingsCreateJoinPolicyAPPLICATIONONLY     GroupSettingsCreateJoinPolicy = "APPLICATION_ONLY"
	GroupSettingsCreateJoinPolicyINVITEORAPPLICATION GroupSettingsCreateJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all GroupSettingsCreateJoinPolicy values.
func (GroupSettingsCreateJoinPolicy) AllValues() []GroupSettingsCreateJoinPolicy {
	return []GroupSettingsCreateJoinPolicy{
		GroupSettingsCreateJoinPolicyOPEN,
		GroupSettingsCreateJoinPolicyINVITEONLY,
		GroupSettingsCreateJoinPolicyAPPLICATIONONLY,
		GroupSettingsCreateJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsCreateJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsCreateJoinPolicyOPEN:
		return []byte(s), nil
	case GroupSettingsCreateJoinPolicyINVITEONLY:
		return []byte(s), nil
	case GroupSettingsCreateJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case GroupSettingsCreateJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsCreateJoinPolicy) UnmarshalText(data []byte) error {
	switch GroupSettingsCreateJoinPolicy(data) {
	case GroupSettingsCreateJoinPolicyOPEN:
		*s = GroupSettingsCreateJoinPolicyOPEN
		return nil
	case GroupSettingsCreateJoinPolicyINVITEONLY:
		*s = GroupSettingsCreateJoinPolicyINVITEONLY
		return nil
	case GroupSettingsCreateJoinPolicyAPPLICATIONONLY:
		*s = GroupSettingsCreateJoinPolicyAPPLICATIONONLY
		return nil
	case GroupSettingsCreateJoinPolicyINVITEORAPPLICATION:
		*s = GroupSettingsCreateJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GroupSettingsCreateVisibility string

const (
	GroupSettingsCreateVisibilityPUBLIC  GroupSettingsCreateVisibility = "PUBLIC"
	GroupSettingsCreateVisibilityPRIVATE GroupSettingsCreateVisibility = "PRIVATE"
)

// AllValues returns all GroupSettingsCreateVisibility values.
func (GroupSettingsCreateVisibility) AllValues() []GroupSettingsCreateVisibility {
	return []GroupSettingsCreateVisibility{
		GroupSettingsCreateVisibilityPUBLIC,
		GroupSettingsCreateVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsCreateVisibility) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsCreateVisibilityPUBLIC:
		return []byte(s), nil
	case GroupSettingsCreateVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsCreateVisibility) UnmarshalText(data []byte) error {
	switch GroupSettingsCreateVisibility(data) {
	case GroupSettingsCreateVisibilityPUBLIC:
		*s = GroupSettingsCreateVisibilityPUBLIC
		return nil
	case GroupSettingsCreateVisibilityPRIVATE:
		*s = GroupSettingsCreateVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GroupSettings_GroupRead
type GroupSettingsGroupRead struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *GroupSettingsGroupRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingsGroupRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingsGroupRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingsGroupRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingsGroupRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupSettingsGroupRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupSettingsGroupRead) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *GroupSettingsGroupRead) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *GroupSettingsGroupRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingsGroupRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingsGroupRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingsGroupRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingsGroupRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupSettingsGroupRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupSettingsGroupRead) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *GroupSettingsGroupRead) SetLogoURL(val string) {
	s.LogoURL = val
}

func (*GroupSettingsGroupRead) readGroupSettingsGroupRes() {}

// Ref: #/components/schemas/GroupSettingsList
type GroupSettingsList struct {
	ID         string                      `json:"id"`
	CreatedAt  time.Time                   `json:"created_at"`
	UpdatedAt  time.Time                   `json:"updated_at"`
	CreatedBy  OptString                   `json:"created_by"`
	UpdatedBy  OptString                   `json:"updated_by"`
	Visibility GroupSettingsListVisibility `json:"visibility"`
	JoinPolicy GroupSettingsListJoinPolicy `json:"join_policy"`
}

// GetID returns the value of ID.
func (s *GroupSettingsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *GroupSettingsList) GetVisibility() GroupSettingsListVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *GroupSettingsList) GetJoinPolicy() GroupSettingsListJoinPolicy {
	return s.JoinPolicy
}

// SetID sets the value of ID.
func (s *GroupSettingsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *GroupSettingsList) SetVisibility(val GroupSettingsListVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *GroupSettingsList) SetJoinPolicy(val GroupSettingsListJoinPolicy) {
	s.JoinPolicy = val
}

type GroupSettingsListJoinPolicy string

const (
	GroupSettingsListJoinPolicyOPEN                GroupSettingsListJoinPolicy = "OPEN"
	GroupSettingsListJoinPolicyINVITEONLY          GroupSettingsListJoinPolicy = "INVITE_ONLY"
	GroupSettingsListJoinPolicyAPPLICATIONONLY     GroupSettingsListJoinPolicy = "APPLICATION_ONLY"
	GroupSettingsListJoinPolicyINVITEORAPPLICATION GroupSettingsListJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all GroupSettingsListJoinPolicy values.
func (GroupSettingsListJoinPolicy) AllValues() []GroupSettingsListJoinPolicy {
	return []GroupSettingsListJoinPolicy{
		GroupSettingsListJoinPolicyOPEN,
		GroupSettingsListJoinPolicyINVITEONLY,
		GroupSettingsListJoinPolicyAPPLICATIONONLY,
		GroupSettingsListJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsListJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsListJoinPolicyOPEN:
		return []byte(s), nil
	case GroupSettingsListJoinPolicyINVITEONLY:
		return []byte(s), nil
	case GroupSettingsListJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case GroupSettingsListJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsListJoinPolicy) UnmarshalText(data []byte) error {
	switch GroupSettingsListJoinPolicy(data) {
	case GroupSettingsListJoinPolicyOPEN:
		*s = GroupSettingsListJoinPolicyOPEN
		return nil
	case GroupSettingsListJoinPolicyINVITEONLY:
		*s = GroupSettingsListJoinPolicyINVITEONLY
		return nil
	case GroupSettingsListJoinPolicyAPPLICATIONONLY:
		*s = GroupSettingsListJoinPolicyAPPLICATIONONLY
		return nil
	case GroupSettingsListJoinPolicyINVITEORAPPLICATION:
		*s = GroupSettingsListJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GroupSettingsListVisibility string

const (
	GroupSettingsListVisibilityPUBLIC  GroupSettingsListVisibility = "PUBLIC"
	GroupSettingsListVisibilityPRIVATE GroupSettingsListVisibility = "PRIVATE"
)

// AllValues returns all GroupSettingsListVisibility values.
func (GroupSettingsListVisibility) AllValues() []GroupSettingsListVisibility {
	return []GroupSettingsListVisibility{
		GroupSettingsListVisibilityPUBLIC,
		GroupSettingsListVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsListVisibility) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsListVisibilityPUBLIC:
		return []byte(s), nil
	case GroupSettingsListVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsListVisibility) UnmarshalText(data []byte) error {
	switch GroupSettingsListVisibility(data) {
	case GroupSettingsListVisibilityPUBLIC:
		*s = GroupSettingsListVisibilityPUBLIC
		return nil
	case GroupSettingsListVisibilityPRIVATE:
		*s = GroupSettingsListVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GroupSettingsRead
type GroupSettingsRead struct {
	ID         string                      `json:"id"`
	CreatedAt  time.Time                   `json:"created_at"`
	UpdatedAt  time.Time                   `json:"updated_at"`
	CreatedBy  OptString                   `json:"created_by"`
	UpdatedBy  OptString                   `json:"updated_by"`
	Visibility GroupSettingsReadVisibility `json:"visibility"`
	JoinPolicy GroupSettingsReadJoinPolicy `json:"join_policy"`
}

// GetID returns the value of ID.
func (s *GroupSettingsRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingsRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingsRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingsRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingsRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *GroupSettingsRead) GetVisibility() GroupSettingsReadVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *GroupSettingsRead) GetJoinPolicy() GroupSettingsReadJoinPolicy {
	return s.JoinPolicy
}

// SetID sets the value of ID.
func (s *GroupSettingsRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingsRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingsRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingsRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingsRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *GroupSettingsRead) SetVisibility(val GroupSettingsReadVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *GroupSettingsRead) SetJoinPolicy(val GroupSettingsReadJoinPolicy) {
	s.JoinPolicy = val
}

func (*GroupSettingsRead) readGroupSettingsRes() {}

type GroupSettingsReadJoinPolicy string

const (
	GroupSettingsReadJoinPolicyOPEN                GroupSettingsReadJoinPolicy = "OPEN"
	GroupSettingsReadJoinPolicyINVITEONLY          GroupSettingsReadJoinPolicy = "INVITE_ONLY"
	GroupSettingsReadJoinPolicyAPPLICATIONONLY     GroupSettingsReadJoinPolicy = "APPLICATION_ONLY"
	GroupSettingsReadJoinPolicyINVITEORAPPLICATION GroupSettingsReadJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all GroupSettingsReadJoinPolicy values.
func (GroupSettingsReadJoinPolicy) AllValues() []GroupSettingsReadJoinPolicy {
	return []GroupSettingsReadJoinPolicy{
		GroupSettingsReadJoinPolicyOPEN,
		GroupSettingsReadJoinPolicyINVITEONLY,
		GroupSettingsReadJoinPolicyAPPLICATIONONLY,
		GroupSettingsReadJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsReadJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsReadJoinPolicyOPEN:
		return []byte(s), nil
	case GroupSettingsReadJoinPolicyINVITEONLY:
		return []byte(s), nil
	case GroupSettingsReadJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case GroupSettingsReadJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsReadJoinPolicy) UnmarshalText(data []byte) error {
	switch GroupSettingsReadJoinPolicy(data) {
	case GroupSettingsReadJoinPolicyOPEN:
		*s = GroupSettingsReadJoinPolicyOPEN
		return nil
	case GroupSettingsReadJoinPolicyINVITEONLY:
		*s = GroupSettingsReadJoinPolicyINVITEONLY
		return nil
	case GroupSettingsReadJoinPolicyAPPLICATIONONLY:
		*s = GroupSettingsReadJoinPolicyAPPLICATIONONLY
		return nil
	case GroupSettingsReadJoinPolicyINVITEORAPPLICATION:
		*s = GroupSettingsReadJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GroupSettingsReadVisibility string

const (
	GroupSettingsReadVisibilityPUBLIC  GroupSettingsReadVisibility = "PUBLIC"
	GroupSettingsReadVisibilityPRIVATE GroupSettingsReadVisibility = "PRIVATE"
)

// AllValues returns all GroupSettingsReadVisibility values.
func (GroupSettingsReadVisibility) AllValues() []GroupSettingsReadVisibility {
	return []GroupSettingsReadVisibility{
		GroupSettingsReadVisibilityPUBLIC,
		GroupSettingsReadVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsReadVisibility) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsReadVisibilityPUBLIC:
		return []byte(s), nil
	case GroupSettingsReadVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsReadVisibility) UnmarshalText(data []byte) error {
	switch GroupSettingsReadVisibility(data) {
	case GroupSettingsReadVisibilityPUBLIC:
		*s = GroupSettingsReadVisibilityPUBLIC
		return nil
	case GroupSettingsReadVisibilityPRIVATE:
		*s = GroupSettingsReadVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GroupSettingsUpdate
type GroupSettingsUpdate struct {
	ID         string                        `json:"id"`
	CreatedAt  time.Time                     `json:"created_at"`
	UpdatedAt  time.Time                     `json:"updated_at"`
	CreatedBy  OptString                     `json:"created_by"`
	UpdatedBy  OptString                     `json:"updated_by"`
	Visibility GroupSettingsUpdateVisibility `json:"visibility"`
	JoinPolicy GroupSettingsUpdateJoinPolicy `json:"join_policy"`
}

// GetID returns the value of ID.
func (s *GroupSettingsUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupSettingsUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupSettingsUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupSettingsUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupSettingsUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *GroupSettingsUpdate) GetVisibility() GroupSettingsUpdateVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *GroupSettingsUpdate) GetJoinPolicy() GroupSettingsUpdateJoinPolicy {
	return s.JoinPolicy
}

// SetID sets the value of ID.
func (s *GroupSettingsUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupSettingsUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupSettingsUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupSettingsUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupSettingsUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *GroupSettingsUpdate) SetVisibility(val GroupSettingsUpdateVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *GroupSettingsUpdate) SetJoinPolicy(val GroupSettingsUpdateJoinPolicy) {
	s.JoinPolicy = val
}

func (*GroupSettingsUpdate) updateGroupSettingsRes() {}

type GroupSettingsUpdateJoinPolicy string

const (
	GroupSettingsUpdateJoinPolicyOPEN                GroupSettingsUpdateJoinPolicy = "OPEN"
	GroupSettingsUpdateJoinPolicyINVITEONLY          GroupSettingsUpdateJoinPolicy = "INVITE_ONLY"
	GroupSettingsUpdateJoinPolicyAPPLICATIONONLY     GroupSettingsUpdateJoinPolicy = "APPLICATION_ONLY"
	GroupSettingsUpdateJoinPolicyINVITEORAPPLICATION GroupSettingsUpdateJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all GroupSettingsUpdateJoinPolicy values.
func (GroupSettingsUpdateJoinPolicy) AllValues() []GroupSettingsUpdateJoinPolicy {
	return []GroupSettingsUpdateJoinPolicy{
		GroupSettingsUpdateJoinPolicyOPEN,
		GroupSettingsUpdateJoinPolicyINVITEONLY,
		GroupSettingsUpdateJoinPolicyAPPLICATIONONLY,
		GroupSettingsUpdateJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsUpdateJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsUpdateJoinPolicyOPEN:
		return []byte(s), nil
	case GroupSettingsUpdateJoinPolicyINVITEONLY:
		return []byte(s), nil
	case GroupSettingsUpdateJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case GroupSettingsUpdateJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsUpdateJoinPolicy) UnmarshalText(data []byte) error {
	switch GroupSettingsUpdateJoinPolicy(data) {
	case GroupSettingsUpdateJoinPolicyOPEN:
		*s = GroupSettingsUpdateJoinPolicyOPEN
		return nil
	case GroupSettingsUpdateJoinPolicyINVITEONLY:
		*s = GroupSettingsUpdateJoinPolicyINVITEONLY
		return nil
	case GroupSettingsUpdateJoinPolicyAPPLICATIONONLY:
		*s = GroupSettingsUpdateJoinPolicyAPPLICATIONONLY
		return nil
	case GroupSettingsUpdateJoinPolicyINVITEORAPPLICATION:
		*s = GroupSettingsUpdateJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GroupSettingsUpdateVisibility string

const (
	GroupSettingsUpdateVisibilityPUBLIC  GroupSettingsUpdateVisibility = "PUBLIC"
	GroupSettingsUpdateVisibilityPRIVATE GroupSettingsUpdateVisibility = "PRIVATE"
)

// AllValues returns all GroupSettingsUpdateVisibility values.
func (GroupSettingsUpdateVisibility) AllValues() []GroupSettingsUpdateVisibility {
	return []GroupSettingsUpdateVisibility{
		GroupSettingsUpdateVisibilityPUBLIC,
		GroupSettingsUpdateVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GroupSettingsUpdateVisibility) MarshalText() ([]byte, error) {
	switch s {
	case GroupSettingsUpdateVisibilityPUBLIC:
		return []byte(s), nil
	case GroupSettingsUpdateVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GroupSettingsUpdateVisibility) UnmarshalText(data []byte) error {
	switch GroupSettingsUpdateVisibility(data) {
	case GroupSettingsUpdateVisibilityPUBLIC:
		*s = GroupSettingsUpdateVisibilityPUBLIC
		return nil
	case GroupSettingsUpdateVisibilityPRIVATE:
		*s = GroupSettingsUpdateVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/GroupUpdate
type GroupUpdate struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *GroupUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *GroupUpdate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GroupUpdate) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *GroupUpdate) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *GroupUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *GroupUpdate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GroupUpdate) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *GroupUpdate) SetLogoURL(val string) {
	s.LogoURL = val
}

func (*GroupUpdate) updateGroupRes() {}

// Ref: #/components/schemas/Group_UsersList
type GroupUsersList struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *GroupUsersList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *GroupUsersList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *GroupUsersList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *GroupUsersList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *GroupUsersList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *GroupUsersList) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *GroupUsersList) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *GroupUsersList) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *GroupUsersList) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *GroupUsersList) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *GroupUsersList) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *GroupUsersList) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *GroupUsersList) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *GroupUsersList) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *GroupUsersList) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *GroupUsersList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *GroupUsersList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *GroupUsersList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *GroupUsersList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *GroupUsersList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *GroupUsersList) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *GroupUsersList) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *GroupUsersList) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GroupUsersList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *GroupUsersList) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *GroupUsersList) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *GroupUsersList) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *GroupUsersList) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *GroupUsersList) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *GroupUsersList) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

// Ref: #/components/schemas/IntegrationCreate
type IntegrationCreate struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
}

// GetID returns the value of ID.
func (s *IntegrationCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *IntegrationCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *IntegrationCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *IntegrationCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *IntegrationCreate) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *IntegrationCreate) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationCreate) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationCreate) GetSecretName() string {
	return s.SecretName
}

// SetID sets the value of ID.
func (s *IntegrationCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *IntegrationCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *IntegrationCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *IntegrationCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *IntegrationCreate) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *IntegrationCreate) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationCreate) SetSecretName(val string) {
	s.SecretName = val
}

func (*IntegrationCreate) createIntegrationRes() {}

// Ref: #/components/schemas/IntegrationList
type IntegrationList struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
}

// GetID returns the value of ID.
func (s *IntegrationList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *IntegrationList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *IntegrationList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *IntegrationList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *IntegrationList) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *IntegrationList) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationList) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationList) GetSecretName() string {
	return s.SecretName
}

// SetID sets the value of ID.
func (s *IntegrationList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *IntegrationList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *IntegrationList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *IntegrationList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *IntegrationList) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *IntegrationList) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationList) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationList) SetSecretName(val string) {
	s.SecretName = val
}

// Ref: #/components/schemas/Integration_OwnerRead
type IntegrationOwnerRead struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *IntegrationOwnerRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationOwnerRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *IntegrationOwnerRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *IntegrationOwnerRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *IntegrationOwnerRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *IntegrationOwnerRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *IntegrationOwnerRead) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *IntegrationOwnerRead) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *IntegrationOwnerRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationOwnerRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *IntegrationOwnerRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *IntegrationOwnerRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *IntegrationOwnerRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *IntegrationOwnerRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *IntegrationOwnerRead) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *IntegrationOwnerRead) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*IntegrationOwnerRead) readIntegrationOwnerRes() {}

// Ref: #/components/schemas/IntegrationRead
type IntegrationRead struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
}

// GetID returns the value of ID.
func (s *IntegrationRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *IntegrationRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *IntegrationRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *IntegrationRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *IntegrationRead) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *IntegrationRead) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationRead) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationRead) GetSecretName() string {
	return s.SecretName
}

// SetID sets the value of ID.
func (s *IntegrationRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *IntegrationRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *IntegrationRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *IntegrationRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *IntegrationRead) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *IntegrationRead) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationRead) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationRead) SetSecretName(val string) {
	s.SecretName = val
}

func (*IntegrationRead) readIntegrationRes() {}

// Ref: #/components/schemas/IntegrationUpdate
type IntegrationUpdate struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
}

// GetID returns the value of ID.
func (s *IntegrationUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *IntegrationUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *IntegrationUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *IntegrationUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *IntegrationUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *IntegrationUpdate) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *IntegrationUpdate) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *IntegrationUpdate) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *IntegrationUpdate) GetSecretName() string {
	return s.SecretName
}

// SetID sets the value of ID.
func (s *IntegrationUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *IntegrationUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *IntegrationUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *IntegrationUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *IntegrationUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *IntegrationUpdate) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *IntegrationUpdate) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *IntegrationUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *IntegrationUpdate) SetSecretName(val string) {
	s.SecretName = val
}

func (*IntegrationUpdate) updateIntegrationRes() {}

type ListGroupOKApplicationJSON []GroupList

func (*ListGroupOKApplicationJSON) listGroupRes() {}

type ListGroupSettingsOKApplicationJSON []GroupSettingsList

func (*ListGroupSettingsOKApplicationJSON) listGroupSettingsRes() {}

type ListGroupUsersOKApplicationJSON []GroupUsersList

func (*ListGroupUsersOKApplicationJSON) listGroupUsersRes() {}

type ListIntegrationOKApplicationJSON []IntegrationList

func (*ListIntegrationOKApplicationJSON) listIntegrationRes() {}

type ListOrganizationChildrenOKApplicationJSON []OrganizationChildrenList

func (*ListOrganizationChildrenOKApplicationJSON) listOrganizationChildrenRes() {}

type ListOrganizationGroupsOKApplicationJSON []OrganizationGroupsList

func (*ListOrganizationGroupsOKApplicationJSON) listOrganizationGroupsRes() {}

type ListOrganizationIntegrationsOKApplicationJSON []OrganizationIntegrationsList

func (*ListOrganizationIntegrationsOKApplicationJSON) listOrganizationIntegrationsRes() {}

type ListOrganizationOKApplicationJSON []OrganizationList

func (*ListOrganizationOKApplicationJSON) listOrganizationRes() {}

type ListOrganizationUsersOKApplicationJSON []OrganizationUsersList

func (*ListOrganizationUsersOKApplicationJSON) listOrganizationUsersRes() {}

type ListSessionOKApplicationJSON []SessionList

func (*ListSessionOKApplicationJSON) listSessionRes() {}

type ListUserGroupsOKApplicationJSON []UserGroupsList

func (*ListUserGroupsOKApplicationJSON) listUserGroupsRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

type ListUserOrganizationsOKApplicationJSON []UserOrganizationsList

func (*ListUserOrganizationsOKApplicationJSON) listUserOrganizationsRes() {}

type ListUserSessionsOKApplicationJSON []UserSessionsList

func (*ListUserSessionsOKApplicationJSON) listUserSessionsRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateGroupSettingsReqJoinPolicy returns new OptUpdateGroupSettingsReqJoinPolicy with value set to v.
func NewOptUpdateGroupSettingsReqJoinPolicy(v UpdateGroupSettingsReqJoinPolicy) OptUpdateGroupSettingsReqJoinPolicy {
	return OptUpdateGroupSettingsReqJoinPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateGroupSettingsReqJoinPolicy is optional UpdateGroupSettingsReqJoinPolicy.
type OptUpdateGroupSettingsReqJoinPolicy struct {
	Value UpdateGroupSettingsReqJoinPolicy
	Set   bool
}

// IsSet returns true if OptUpdateGroupSettingsReqJoinPolicy was set.
func (o OptUpdateGroupSettingsReqJoinPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateGroupSettingsReqJoinPolicy) Reset() {
	var v UpdateGroupSettingsReqJoinPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateGroupSettingsReqJoinPolicy) SetTo(v UpdateGroupSettingsReqJoinPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateGroupSettingsReqJoinPolicy) Get() (v UpdateGroupSettingsReqJoinPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateGroupSettingsReqJoinPolicy) Or(d UpdateGroupSettingsReqJoinPolicy) UpdateGroupSettingsReqJoinPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateGroupSettingsReqVisibility returns new OptUpdateGroupSettingsReqVisibility with value set to v.
func NewOptUpdateGroupSettingsReqVisibility(v UpdateGroupSettingsReqVisibility) OptUpdateGroupSettingsReqVisibility {
	return OptUpdateGroupSettingsReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptUpdateGroupSettingsReqVisibility is optional UpdateGroupSettingsReqVisibility.
type OptUpdateGroupSettingsReqVisibility struct {
	Value UpdateGroupSettingsReqVisibility
	Set   bool
}

// IsSet returns true if OptUpdateGroupSettingsReqVisibility was set.
func (o OptUpdateGroupSettingsReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateGroupSettingsReqVisibility) Reset() {
	var v UpdateGroupSettingsReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateGroupSettingsReqVisibility) SetTo(v UpdateGroupSettingsReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateGroupSettingsReqVisibility) Get() (v UpdateGroupSettingsReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateGroupSettingsReqVisibility) Or(d UpdateGroupSettingsReqVisibility) UpdateGroupSettingsReqVisibility {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Organization_ChildrenList
type OrganizationChildrenList struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationChildrenList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationChildrenList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationChildrenList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationChildrenList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationChildrenList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationChildrenList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationChildrenList) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationChildrenList) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationChildrenList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationChildrenList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationChildrenList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationChildrenList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationChildrenList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationChildrenList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationChildrenList) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationChildrenList) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

// Ref: #/components/schemas/OrganizationCreate
type OrganizationCreate struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationCreate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationCreate) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationCreate) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationCreate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationCreate) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*OrganizationCreate) createOrganizationRes() {}

// Ref: #/components/schemas/Organization_GroupsList
type OrganizationGroupsList struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *OrganizationGroupsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationGroupsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationGroupsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationGroupsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationGroupsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationGroupsList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationGroupsList) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *OrganizationGroupsList) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *OrganizationGroupsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationGroupsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationGroupsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationGroupsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationGroupsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationGroupsList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationGroupsList) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *OrganizationGroupsList) SetLogoURL(val string) {
	s.LogoURL = val
}

// Ref: #/components/schemas/Organization_IntegrationsList
type OrganizationIntegrationsList struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Kind        string    `json:"kind"`
	Description OptString `json:"description"`
	SecretName  string    `json:"secret_name"`
}

// GetID returns the value of ID.
func (s *OrganizationIntegrationsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationIntegrationsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationIntegrationsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationIntegrationsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationIntegrationsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationIntegrationsList) GetName() string {
	return s.Name
}

// GetKind returns the value of Kind.
func (s *OrganizationIntegrationsList) GetKind() string {
	return s.Kind
}

// GetDescription returns the value of Description.
func (s *OrganizationIntegrationsList) GetDescription() OptString {
	return s.Description
}

// GetSecretName returns the value of SecretName.
func (s *OrganizationIntegrationsList) GetSecretName() string {
	return s.SecretName
}

// SetID sets the value of ID.
func (s *OrganizationIntegrationsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationIntegrationsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationIntegrationsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationIntegrationsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationIntegrationsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationIntegrationsList) SetName(val string) {
	s.Name = val
}

// SetKind sets the value of Kind.
func (s *OrganizationIntegrationsList) SetKind(val string) {
	s.Kind = val
}

// SetDescription sets the value of Description.
func (s *OrganizationIntegrationsList) SetDescription(val OptString) {
	s.Description = val
}

// SetSecretName sets the value of SecretName.
func (s *OrganizationIntegrationsList) SetSecretName(val string) {
	s.SecretName = val
}

// Ref: #/components/schemas/OrganizationList
type OrganizationList struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationList) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationList) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationList) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationList) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

// Ref: #/components/schemas/Organization_ParentRead
type OrganizationParentRead struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationParentRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationParentRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationParentRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationParentRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationParentRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationParentRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationParentRead) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationParentRead) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationParentRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationParentRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationParentRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationParentRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationParentRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationParentRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationParentRead) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationParentRead) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*OrganizationParentRead) readOrganizationParentRes() {}

// Ref: #/components/schemas/OrganizationRead
type OrganizationRead struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationRead) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationRead) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationRead) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationRead) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationRead) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationRead) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*OrganizationRead) readOrganizationRes() {}

// Ref: #/components/schemas/OrganizationUpdate
type OrganizationUpdate struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *OrganizationUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *OrganizationUpdate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *OrganizationUpdate) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *OrganizationUpdate) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *OrganizationUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *OrganizationUpdate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *OrganizationUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *OrganizationUpdate) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

func (*OrganizationUpdate) updateOrganizationRes() {}

// Ref: #/components/schemas/Organization_UsersList
type OrganizationUsersList struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *OrganizationUsersList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OrganizationUsersList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OrganizationUsersList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *OrganizationUsersList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *OrganizationUsersList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *OrganizationUsersList) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *OrganizationUsersList) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *OrganizationUsersList) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *OrganizationUsersList) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *OrganizationUsersList) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *OrganizationUsersList) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *OrganizationUsersList) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *OrganizationUsersList) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *OrganizationUsersList) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *OrganizationUsersList) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *OrganizationUsersList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OrganizationUsersList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OrganizationUsersList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *OrganizationUsersList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *OrganizationUsersList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *OrganizationUsersList) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *OrganizationUsersList) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *OrganizationUsersList) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *OrganizationUsersList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *OrganizationUsersList) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *OrganizationUsersList) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *OrganizationUsersList) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *OrganizationUsersList) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *OrganizationUsersList) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *OrganizationUsersList) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createGroupRes()                  {}
func (*R400) createGroupSettingsRes()          {}
func (*R400) createIntegrationRes()            {}
func (*R400) createOrganizationRes()           {}
func (*R400) createSessionRes()                {}
func (*R400) createUserRes()                   {}
func (*R400) deleteGroupRes()                  {}
func (*R400) deleteGroupSettingsRes()          {}
func (*R400) deleteIntegrationRes()            {}
func (*R400) deleteOrganizationRes()           {}
func (*R400) deleteSessionRes()                {}
func (*R400) deleteUserRes()                   {}
func (*R400) listGroupRes()                    {}
func (*R400) listGroupSettingsRes()            {}
func (*R400) listGroupUsersRes()               {}
func (*R400) listIntegrationRes()              {}
func (*R400) listOrganizationChildrenRes()     {}
func (*R400) listOrganizationGroupsRes()       {}
func (*R400) listOrganizationIntegrationsRes() {}
func (*R400) listOrganizationRes()             {}
func (*R400) listOrganizationUsersRes()        {}
func (*R400) listSessionRes()                  {}
func (*R400) listUserGroupsRes()               {}
func (*R400) listUserOrganizationsRes()        {}
func (*R400) listUserRes()                     {}
func (*R400) listUserSessionsRes()             {}
func (*R400) readGroupOwnerRes()               {}
func (*R400) readGroupRes()                    {}
func (*R400) readGroupSettingRes()             {}
func (*R400) readGroupSettingsGroupRes()       {}
func (*R400) readGroupSettingsRes()            {}
func (*R400) readIntegrationOwnerRes()         {}
func (*R400) readIntegrationRes()              {}
func (*R400) readOrganizationParentRes()       {}
func (*R400) readOrganizationRes()             {}
func (*R400) readSessionRes()                  {}
func (*R400) readSessionUsersRes()             {}
func (*R400) readUserRes()                     {}
func (*R400) updateGroupRes()                  {}
func (*R400) updateGroupSettingsRes()          {}
func (*R400) updateIntegrationRes()            {}
func (*R400) updateOrganizationRes()           {}
func (*R400) updateSessionRes()                {}
func (*R400) updateUserRes()                   {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteGroupRes()                  {}
func (*R404) deleteGroupSettingsRes()          {}
func (*R404) deleteIntegrationRes()            {}
func (*R404) deleteOrganizationRes()           {}
func (*R404) deleteSessionRes()                {}
func (*R404) deleteUserRes()                   {}
func (*R404) listGroupRes()                    {}
func (*R404) listGroupSettingsRes()            {}
func (*R404) listGroupUsersRes()               {}
func (*R404) listIntegrationRes()              {}
func (*R404) listOrganizationChildrenRes()     {}
func (*R404) listOrganizationGroupsRes()       {}
func (*R404) listOrganizationIntegrationsRes() {}
func (*R404) listOrganizationRes()             {}
func (*R404) listOrganizationUsersRes()        {}
func (*R404) listSessionRes()                  {}
func (*R404) listUserGroupsRes()               {}
func (*R404) listUserOrganizationsRes()        {}
func (*R404) listUserRes()                     {}
func (*R404) listUserSessionsRes()             {}
func (*R404) readGroupOwnerRes()               {}
func (*R404) readGroupRes()                    {}
func (*R404) readGroupSettingRes()             {}
func (*R404) readGroupSettingsGroupRes()       {}
func (*R404) readGroupSettingsRes()            {}
func (*R404) readIntegrationOwnerRes()         {}
func (*R404) readIntegrationRes()              {}
func (*R404) readOrganizationParentRes()       {}
func (*R404) readOrganizationRes()             {}
func (*R404) readSessionRes()                  {}
func (*R404) readSessionUsersRes()             {}
func (*R404) readUserRes()                     {}
func (*R404) updateGroupRes()                  {}
func (*R404) updateGroupSettingsRes()          {}
func (*R404) updateIntegrationRes()            {}
func (*R404) updateOrganizationRes()           {}
func (*R404) updateSessionRes()                {}
func (*R404) updateUserRes()                   {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createGroupRes()                  {}
func (*R409) createGroupSettingsRes()          {}
func (*R409) createIntegrationRes()            {}
func (*R409) createOrganizationRes()           {}
func (*R409) createSessionRes()                {}
func (*R409) createUserRes()                   {}
func (*R409) deleteGroupRes()                  {}
func (*R409) deleteGroupSettingsRes()          {}
func (*R409) deleteIntegrationRes()            {}
func (*R409) deleteOrganizationRes()           {}
func (*R409) deleteSessionRes()                {}
func (*R409) deleteUserRes()                   {}
func (*R409) listGroupRes()                    {}
func (*R409) listGroupSettingsRes()            {}
func (*R409) listGroupUsersRes()               {}
func (*R409) listIntegrationRes()              {}
func (*R409) listOrganizationChildrenRes()     {}
func (*R409) listOrganizationGroupsRes()       {}
func (*R409) listOrganizationIntegrationsRes() {}
func (*R409) listOrganizationRes()             {}
func (*R409) listOrganizationUsersRes()        {}
func (*R409) listSessionRes()                  {}
func (*R409) listUserGroupsRes()               {}
func (*R409) listUserOrganizationsRes()        {}
func (*R409) listUserRes()                     {}
func (*R409) listUserSessionsRes()             {}
func (*R409) readGroupOwnerRes()               {}
func (*R409) readGroupRes()                    {}
func (*R409) readGroupSettingRes()             {}
func (*R409) readGroupSettingsGroupRes()       {}
func (*R409) readGroupSettingsRes()            {}
func (*R409) readIntegrationOwnerRes()         {}
func (*R409) readIntegrationRes()              {}
func (*R409) readOrganizationParentRes()       {}
func (*R409) readOrganizationRes()             {}
func (*R409) readSessionRes()                  {}
func (*R409) readSessionUsersRes()             {}
func (*R409) readUserRes()                     {}
func (*R409) updateGroupRes()                  {}
func (*R409) updateGroupSettingsRes()          {}
func (*R409) updateIntegrationRes()            {}
func (*R409) updateOrganizationRes()           {}
func (*R409) updateSessionRes()                {}
func (*R409) updateUserRes()                   {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createGroupRes()                  {}
func (*R500) createGroupSettingsRes()          {}
func (*R500) createIntegrationRes()            {}
func (*R500) createOrganizationRes()           {}
func (*R500) createSessionRes()                {}
func (*R500) createUserRes()                   {}
func (*R500) deleteGroupRes()                  {}
func (*R500) deleteGroupSettingsRes()          {}
func (*R500) deleteIntegrationRes()            {}
func (*R500) deleteOrganizationRes()           {}
func (*R500) deleteSessionRes()                {}
func (*R500) deleteUserRes()                   {}
func (*R500) listGroupRes()                    {}
func (*R500) listGroupSettingsRes()            {}
func (*R500) listGroupUsersRes()               {}
func (*R500) listIntegrationRes()              {}
func (*R500) listOrganizationChildrenRes()     {}
func (*R500) listOrganizationGroupsRes()       {}
func (*R500) listOrganizationIntegrationsRes() {}
func (*R500) listOrganizationRes()             {}
func (*R500) listOrganizationUsersRes()        {}
func (*R500) listSessionRes()                  {}
func (*R500) listUserGroupsRes()               {}
func (*R500) listUserOrganizationsRes()        {}
func (*R500) listUserRes()                     {}
func (*R500) listUserSessionsRes()             {}
func (*R500) readGroupOwnerRes()               {}
func (*R500) readGroupRes()                    {}
func (*R500) readGroupSettingRes()             {}
func (*R500) readGroupSettingsGroupRes()       {}
func (*R500) readGroupSettingsRes()            {}
func (*R500) readIntegrationOwnerRes()         {}
func (*R500) readIntegrationRes()              {}
func (*R500) readOrganizationParentRes()       {}
func (*R500) readOrganizationRes()             {}
func (*R500) readSessionRes()                  {}
func (*R500) readSessionUsersRes()             {}
func (*R500) readUserRes()                     {}
func (*R500) updateGroupRes()                  {}
func (*R500) updateGroupSettingsRes()          {}
func (*R500) updateIntegrationRes()            {}
func (*R500) updateOrganizationRes()           {}
func (*R500) updateSessionRes()                {}
func (*R500) updateUserRes()                   {}

// Ref: #/components/schemas/SessionCreate
type SessionCreate struct {
	ID        string            `json:"id"`
	CreatedAt time.Time         `json:"created_at"`
	UpdatedAt time.Time         `json:"updated_at"`
	CreatedBy OptString         `json:"created_by"`
	UpdatedBy OptString         `json:"updated_by"`
	Type      SessionCreateType `json:"type"`
	Disabled  bool              `json:"disabled"`
	Token     string            `json:"token"`
	UserAgent OptString         `json:"user_agent"`
	Ips       string            `json:"ips"`
}

// GetID returns the value of ID.
func (s *SessionCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *SessionCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SessionCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *SessionCreate) GetType() SessionCreateType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *SessionCreate) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *SessionCreate) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *SessionCreate) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *SessionCreate) GetIps() string {
	return s.Ips
}

// SetID sets the value of ID.
func (s *SessionCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *SessionCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SessionCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *SessionCreate) SetType(val SessionCreateType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *SessionCreate) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *SessionCreate) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *SessionCreate) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *SessionCreate) SetIps(val string) {
	s.Ips = val
}

func (*SessionCreate) createSessionRes() {}

type SessionCreateType string

const (
	SessionCreateTypeLocal       SessionCreateType = "local"
	SessionCreateTypeOAuth       SessionCreateType = "oauth"
	SessionCreateTypeAppPassword SessionCreateType = "app_password"
)

// AllValues returns all SessionCreateType values.
func (SessionCreateType) AllValues() []SessionCreateType {
	return []SessionCreateType{
		SessionCreateTypeLocal,
		SessionCreateTypeOAuth,
		SessionCreateTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionCreateType) MarshalText() ([]byte, error) {
	switch s {
	case SessionCreateTypeLocal:
		return []byte(s), nil
	case SessionCreateTypeOAuth:
		return []byte(s), nil
	case SessionCreateTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionCreateType) UnmarshalText(data []byte) error {
	switch SessionCreateType(data) {
	case SessionCreateTypeLocal:
		*s = SessionCreateTypeLocal
		return nil
	case SessionCreateTypeOAuth:
		*s = SessionCreateTypeOAuth
		return nil
	case SessionCreateTypeAppPassword:
		*s = SessionCreateTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SessionList
type SessionList struct {
	ID        string          `json:"id"`
	CreatedAt time.Time       `json:"created_at"`
	UpdatedAt time.Time       `json:"updated_at"`
	CreatedBy OptString       `json:"created_by"`
	UpdatedBy OptString       `json:"updated_by"`
	Type      SessionListType `json:"type"`
	Disabled  bool            `json:"disabled"`
	Token     string          `json:"token"`
	UserAgent OptString       `json:"user_agent"`
	Ips       string          `json:"ips"`
}

// GetID returns the value of ID.
func (s *SessionList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *SessionList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SessionList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *SessionList) GetType() SessionListType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *SessionList) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *SessionList) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *SessionList) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *SessionList) GetIps() string {
	return s.Ips
}

// SetID sets the value of ID.
func (s *SessionList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *SessionList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SessionList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *SessionList) SetType(val SessionListType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *SessionList) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *SessionList) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *SessionList) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *SessionList) SetIps(val string) {
	s.Ips = val
}

type SessionListType string

const (
	SessionListTypeLocal       SessionListType = "local"
	SessionListTypeOAuth       SessionListType = "oauth"
	SessionListTypeAppPassword SessionListType = "app_password"
)

// AllValues returns all SessionListType values.
func (SessionListType) AllValues() []SessionListType {
	return []SessionListType{
		SessionListTypeLocal,
		SessionListTypeOAuth,
		SessionListTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionListType) MarshalText() ([]byte, error) {
	switch s {
	case SessionListTypeLocal:
		return []byte(s), nil
	case SessionListTypeOAuth:
		return []byte(s), nil
	case SessionListTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionListType) UnmarshalText(data []byte) error {
	switch SessionListType(data) {
	case SessionListTypeLocal:
		*s = SessionListTypeLocal
		return nil
	case SessionListTypeOAuth:
		*s = SessionListTypeOAuth
		return nil
	case SessionListTypeAppPassword:
		*s = SessionListTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SessionRead
type SessionRead struct {
	ID        string          `json:"id"`
	CreatedAt time.Time       `json:"created_at"`
	UpdatedAt time.Time       `json:"updated_at"`
	CreatedBy OptString       `json:"created_by"`
	UpdatedBy OptString       `json:"updated_by"`
	Type      SessionReadType `json:"type"`
	Disabled  bool            `json:"disabled"`
	Token     string          `json:"token"`
	UserAgent OptString       `json:"user_agent"`
	Ips       string          `json:"ips"`
}

// GetID returns the value of ID.
func (s *SessionRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *SessionRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SessionRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *SessionRead) GetType() SessionReadType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *SessionRead) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *SessionRead) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *SessionRead) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *SessionRead) GetIps() string {
	return s.Ips
}

// SetID sets the value of ID.
func (s *SessionRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *SessionRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SessionRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *SessionRead) SetType(val SessionReadType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *SessionRead) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *SessionRead) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *SessionRead) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *SessionRead) SetIps(val string) {
	s.Ips = val
}

func (*SessionRead) readSessionRes() {}

type SessionReadType string

const (
	SessionReadTypeLocal       SessionReadType = "local"
	SessionReadTypeOAuth       SessionReadType = "oauth"
	SessionReadTypeAppPassword SessionReadType = "app_password"
)

// AllValues returns all SessionReadType values.
func (SessionReadType) AllValues() []SessionReadType {
	return []SessionReadType{
		SessionReadTypeLocal,
		SessionReadTypeOAuth,
		SessionReadTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionReadType) MarshalText() ([]byte, error) {
	switch s {
	case SessionReadTypeLocal:
		return []byte(s), nil
	case SessionReadTypeOAuth:
		return []byte(s), nil
	case SessionReadTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionReadType) UnmarshalText(data []byte) error {
	switch SessionReadType(data) {
	case SessionReadTypeLocal:
		*s = SessionReadTypeLocal
		return nil
	case SessionReadTypeOAuth:
		*s = SessionReadTypeOAuth
		return nil
	case SessionReadTypeAppPassword:
		*s = SessionReadTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/SessionUpdate
type SessionUpdate struct {
	ID        string            `json:"id"`
	CreatedAt time.Time         `json:"created_at"`
	UpdatedAt time.Time         `json:"updated_at"`
	CreatedBy OptString         `json:"created_by"`
	UpdatedBy OptString         `json:"updated_by"`
	Type      SessionUpdateType `json:"type"`
	Disabled  bool              `json:"disabled"`
	Token     string            `json:"token"`
	UserAgent OptString         `json:"user_agent"`
	Ips       string            `json:"ips"`
}

// GetID returns the value of ID.
func (s *SessionUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *SessionUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SessionUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *SessionUpdate) GetType() SessionUpdateType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *SessionUpdate) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *SessionUpdate) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *SessionUpdate) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *SessionUpdate) GetIps() string {
	return s.Ips
}

// SetID sets the value of ID.
func (s *SessionUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *SessionUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SessionUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *SessionUpdate) SetType(val SessionUpdateType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *SessionUpdate) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *SessionUpdate) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *SessionUpdate) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *SessionUpdate) SetIps(val string) {
	s.Ips = val
}

func (*SessionUpdate) updateSessionRes() {}

type SessionUpdateType string

const (
	SessionUpdateTypeLocal       SessionUpdateType = "local"
	SessionUpdateTypeOAuth       SessionUpdateType = "oauth"
	SessionUpdateTypeAppPassword SessionUpdateType = "app_password"
)

// AllValues returns all SessionUpdateType values.
func (SessionUpdateType) AllValues() []SessionUpdateType {
	return []SessionUpdateType{
		SessionUpdateTypeLocal,
		SessionUpdateTypeOAuth,
		SessionUpdateTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SessionUpdateType) MarshalText() ([]byte, error) {
	switch s {
	case SessionUpdateTypeLocal:
		return []byte(s), nil
	case SessionUpdateTypeOAuth:
		return []byte(s), nil
	case SessionUpdateTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SessionUpdateType) UnmarshalText(data []byte) error {
	switch SessionUpdateType(data) {
	case SessionUpdateTypeLocal:
		*s = SessionUpdateTypeLocal
		return nil
	case SessionUpdateTypeOAuth:
		*s = SessionUpdateTypeOAuth
		return nil
	case SessionUpdateTypeAppPassword:
		*s = SessionUpdateTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Session_UsersRead
type SessionUsersRead struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *SessionUsersRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SessionUsersRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SessionUsersRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *SessionUsersRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *SessionUsersRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *SessionUsersRead) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *SessionUsersRead) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *SessionUsersRead) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *SessionUsersRead) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *SessionUsersRead) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *SessionUsersRead) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *SessionUsersRead) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *SessionUsersRead) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *SessionUsersRead) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *SessionUsersRead) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *SessionUsersRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SessionUsersRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SessionUsersRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *SessionUsersRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *SessionUsersRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *SessionUsersRead) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *SessionUsersRead) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *SessionUsersRead) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *SessionUsersRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *SessionUsersRead) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *SessionUsersRead) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *SessionUsersRead) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *SessionUsersRead) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *SessionUsersRead) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *SessionUsersRead) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

func (*SessionUsersRead) readSessionUsersRes() {}

type UpdateGroupReq struct {
	UpdatedAt   OptDateTime `json:"updated_at"`
	CreatedBy   OptString   `json:"created_by"`
	UpdatedBy   OptString   `json:"updated_by"`
	Name        OptString   `json:"name"`
	Description OptString   `json:"description"`
	LogoURL     OptString   `json:"logo_url"`
	Setting     OptString   `json:"setting"`
	Users       []string    `json:"users"`
	Owner       OptString   `json:"owner"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateGroupReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateGroupReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateGroupReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *UpdateGroupReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateGroupReq) GetDescription() OptString {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *UpdateGroupReq) GetLogoURL() OptString {
	return s.LogoURL
}

// GetSetting returns the value of Setting.
func (s *UpdateGroupReq) GetSetting() OptString {
	return s.Setting
}

// GetUsers returns the value of Users.
func (s *UpdateGroupReq) GetUsers() []string {
	return s.Users
}

// GetOwner returns the value of Owner.
func (s *UpdateGroupReq) GetOwner() OptString {
	return s.Owner
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateGroupReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateGroupReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateGroupReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *UpdateGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateGroupReq) SetDescription(val OptString) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *UpdateGroupReq) SetLogoURL(val OptString) {
	s.LogoURL = val
}

// SetSetting sets the value of Setting.
func (s *UpdateGroupReq) SetSetting(val OptString) {
	s.Setting = val
}

// SetUsers sets the value of Users.
func (s *UpdateGroupReq) SetUsers(val []string) {
	s.Users = val
}

// SetOwner sets the value of Owner.
func (s *UpdateGroupReq) SetOwner(val OptString) {
	s.Owner = val
}

type UpdateGroupSettingsReq struct {
	UpdatedAt  OptDateTime                         `json:"updated_at"`
	CreatedBy  OptString                           `json:"created_by"`
	UpdatedBy  OptString                           `json:"updated_by"`
	Visibility OptUpdateGroupSettingsReqVisibility `json:"visibility"`
	JoinPolicy OptUpdateGroupSettingsReqJoinPolicy `json:"join_policy"`
	Group      OptString                           `json:"group"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateGroupSettingsReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateGroupSettingsReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateGroupSettingsReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVisibility returns the value of Visibility.
func (s *UpdateGroupSettingsReq) GetVisibility() OptUpdateGroupSettingsReqVisibility {
	return s.Visibility
}

// GetJoinPolicy returns the value of JoinPolicy.
func (s *UpdateGroupSettingsReq) GetJoinPolicy() OptUpdateGroupSettingsReqJoinPolicy {
	return s.JoinPolicy
}

// GetGroup returns the value of Group.
func (s *UpdateGroupSettingsReq) GetGroup() OptString {
	return s.Group
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateGroupSettingsReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateGroupSettingsReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateGroupSettingsReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVisibility sets the value of Visibility.
func (s *UpdateGroupSettingsReq) SetVisibility(val OptUpdateGroupSettingsReqVisibility) {
	s.Visibility = val
}

// SetJoinPolicy sets the value of JoinPolicy.
func (s *UpdateGroupSettingsReq) SetJoinPolicy(val OptUpdateGroupSettingsReqJoinPolicy) {
	s.JoinPolicy = val
}

// SetGroup sets the value of Group.
func (s *UpdateGroupSettingsReq) SetGroup(val OptString) {
	s.Group = val
}

type UpdateGroupSettingsReqJoinPolicy string

const (
	UpdateGroupSettingsReqJoinPolicyOPEN                UpdateGroupSettingsReqJoinPolicy = "OPEN"
	UpdateGroupSettingsReqJoinPolicyINVITEONLY          UpdateGroupSettingsReqJoinPolicy = "INVITE_ONLY"
	UpdateGroupSettingsReqJoinPolicyAPPLICATIONONLY     UpdateGroupSettingsReqJoinPolicy = "APPLICATION_ONLY"
	UpdateGroupSettingsReqJoinPolicyINVITEORAPPLICATION UpdateGroupSettingsReqJoinPolicy = "INVITE_OR_APPLICATION"
)

// AllValues returns all UpdateGroupSettingsReqJoinPolicy values.
func (UpdateGroupSettingsReqJoinPolicy) AllValues() []UpdateGroupSettingsReqJoinPolicy {
	return []UpdateGroupSettingsReqJoinPolicy{
		UpdateGroupSettingsReqJoinPolicyOPEN,
		UpdateGroupSettingsReqJoinPolicyINVITEONLY,
		UpdateGroupSettingsReqJoinPolicyAPPLICATIONONLY,
		UpdateGroupSettingsReqJoinPolicyINVITEORAPPLICATION,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateGroupSettingsReqJoinPolicy) MarshalText() ([]byte, error) {
	switch s {
	case UpdateGroupSettingsReqJoinPolicyOPEN:
		return []byte(s), nil
	case UpdateGroupSettingsReqJoinPolicyINVITEONLY:
		return []byte(s), nil
	case UpdateGroupSettingsReqJoinPolicyAPPLICATIONONLY:
		return []byte(s), nil
	case UpdateGroupSettingsReqJoinPolicyINVITEORAPPLICATION:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateGroupSettingsReqJoinPolicy) UnmarshalText(data []byte) error {
	switch UpdateGroupSettingsReqJoinPolicy(data) {
	case UpdateGroupSettingsReqJoinPolicyOPEN:
		*s = UpdateGroupSettingsReqJoinPolicyOPEN
		return nil
	case UpdateGroupSettingsReqJoinPolicyINVITEONLY:
		*s = UpdateGroupSettingsReqJoinPolicyINVITEONLY
		return nil
	case UpdateGroupSettingsReqJoinPolicyAPPLICATIONONLY:
		*s = UpdateGroupSettingsReqJoinPolicyAPPLICATIONONLY
		return nil
	case UpdateGroupSettingsReqJoinPolicyINVITEORAPPLICATION:
		*s = UpdateGroupSettingsReqJoinPolicyINVITEORAPPLICATION
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateGroupSettingsReqVisibility string

const (
	UpdateGroupSettingsReqVisibilityPUBLIC  UpdateGroupSettingsReqVisibility = "PUBLIC"
	UpdateGroupSettingsReqVisibilityPRIVATE UpdateGroupSettingsReqVisibility = "PRIVATE"
)

// AllValues returns all UpdateGroupSettingsReqVisibility values.
func (UpdateGroupSettingsReqVisibility) AllValues() []UpdateGroupSettingsReqVisibility {
	return []UpdateGroupSettingsReqVisibility{
		UpdateGroupSettingsReqVisibilityPUBLIC,
		UpdateGroupSettingsReqVisibilityPRIVATE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UpdateGroupSettingsReqVisibility) MarshalText() ([]byte, error) {
	switch s {
	case UpdateGroupSettingsReqVisibilityPUBLIC:
		return []byte(s), nil
	case UpdateGroupSettingsReqVisibilityPRIVATE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdateGroupSettingsReqVisibility) UnmarshalText(data []byte) error {
	switch UpdateGroupSettingsReqVisibility(data) {
	case UpdateGroupSettingsReqVisibilityPUBLIC:
		*s = UpdateGroupSettingsReqVisibilityPUBLIC
		return nil
	case UpdateGroupSettingsReqVisibilityPRIVATE:
		*s = UpdateGroupSettingsReqVisibilityPRIVATE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateIntegrationReq struct {
	UpdatedAt   OptDateTime `json:"updated_at"`
	CreatedBy   OptString   `json:"created_by"`
	UpdatedBy   OptString   `json:"updated_by"`
	Name        OptString   `json:"name"`
	Description OptString   `json:"description"`
	Owner       OptString   `json:"owner"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateIntegrationReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateIntegrationReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateIntegrationReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *UpdateIntegrationReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateIntegrationReq) GetDescription() OptString {
	return s.Description
}

// GetOwner returns the value of Owner.
func (s *UpdateIntegrationReq) GetOwner() OptString {
	return s.Owner
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateIntegrationReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateIntegrationReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateIntegrationReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *UpdateIntegrationReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateIntegrationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetOwner sets the value of Owner.
func (s *UpdateIntegrationReq) SetOwner(val OptString) {
	s.Owner = val
}

type UpdateOrganizationReq struct {
	UpdatedAt    OptDateTime `json:"updated_at"`
	CreatedBy    OptString   `json:"created_by"`
	UpdatedBy    OptString   `json:"updated_by"`
	Name         OptString   `json:"name"`
	Description  OptString   `json:"description"`
	Parent       OptString   `json:"parent"`
	Children     []string    `json:"children"`
	Users        []string    `json:"users"`
	Groups       []string    `json:"groups"`
	Integrations []string    `json:"integrations"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateOrganizationReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateOrganizationReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateOrganizationReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *UpdateOrganizationReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateOrganizationReq) GetDescription() OptString {
	return s.Description
}

// GetParent returns the value of Parent.
func (s *UpdateOrganizationReq) GetParent() OptString {
	return s.Parent
}

// GetChildren returns the value of Children.
func (s *UpdateOrganizationReq) GetChildren() []string {
	return s.Children
}

// GetUsers returns the value of Users.
func (s *UpdateOrganizationReq) GetUsers() []string {
	return s.Users
}

// GetGroups returns the value of Groups.
func (s *UpdateOrganizationReq) GetGroups() []string {
	return s.Groups
}

// GetIntegrations returns the value of Integrations.
func (s *UpdateOrganizationReq) GetIntegrations() []string {
	return s.Integrations
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateOrganizationReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateOrganizationReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateOrganizationReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *UpdateOrganizationReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateOrganizationReq) SetDescription(val OptString) {
	s.Description = val
}

// SetParent sets the value of Parent.
func (s *UpdateOrganizationReq) SetParent(val OptString) {
	s.Parent = val
}

// SetChildren sets the value of Children.
func (s *UpdateOrganizationReq) SetChildren(val []string) {
	s.Children = val
}

// SetUsers sets the value of Users.
func (s *UpdateOrganizationReq) SetUsers(val []string) {
	s.Users = val
}

// SetGroups sets the value of Groups.
func (s *UpdateOrganizationReq) SetGroups(val []string) {
	s.Groups = val
}

// SetIntegrations sets the value of Integrations.
func (s *UpdateOrganizationReq) SetIntegrations(val []string) {
	s.Integrations = val
}

type UpdateSessionReq struct {
	UpdatedAt OptDateTime `json:"updated_at"`
	CreatedBy OptString   `json:"created_by"`
	UpdatedBy OptString   `json:"updated_by"`
	Disabled  OptBool     `json:"disabled"`
	UserAgent OptString   `json:"user_agent"`
	Ips       OptString   `json:"ips"`
	Users     OptString   `json:"users"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateSessionReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateSessionReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateSessionReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetDisabled returns the value of Disabled.
func (s *UpdateSessionReq) GetDisabled() OptBool {
	return s.Disabled
}

// GetUserAgent returns the value of UserAgent.
func (s *UpdateSessionReq) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *UpdateSessionReq) GetIps() OptString {
	return s.Ips
}

// GetUsers returns the value of Users.
func (s *UpdateSessionReq) GetUsers() OptString {
	return s.Users
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateSessionReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateSessionReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateSessionReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetDisabled sets the value of Disabled.
func (s *UpdateSessionReq) SetDisabled(val OptBool) {
	s.Disabled = val
}

// SetUserAgent sets the value of UserAgent.
func (s *UpdateSessionReq) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *UpdateSessionReq) SetIps(val OptString) {
	s.Ips = val
}

// SetUsers sets the value of Users.
func (s *UpdateSessionReq) SetUsers(val OptString) {
	s.Users = val
}

type UpdateUserReq struct {
	UpdatedAt       OptDateTime `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           OptString   `json:"email"`
	FirstName       OptString   `json:"first_name"`
	LastName        OptString   `json:"last_name"`
	DisplayName     OptString   `json:"display_name"`
	Locked          OptBool     `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
	RecoveryCode    OptString   `json:"recovery_code"`
	Organizations   []string    `json:"organizations"`
	Sessions        []string    `json:"sessions"`
	Groups          []string    `json:"groups"`
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateUserReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UpdateUserReq) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UpdateUserReq) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UpdateUserReq) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UpdateUserReq) GetLastName() OptString {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateUserReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *UpdateUserReq) GetLocked() OptBool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *UpdateUserReq) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *UpdateUserReq) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *UpdateUserReq) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *UpdateUserReq) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *UpdateUserReq) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// GetRecoveryCode returns the value of RecoveryCode.
func (s *UpdateUserReq) GetRecoveryCode() OptString {
	return s.RecoveryCode
}

// GetOrganizations returns the value of Organizations.
func (s *UpdateUserReq) GetOrganizations() []string {
	return s.Organizations
}

// GetSessions returns the value of Sessions.
func (s *UpdateUserReq) GetSessions() []string {
	return s.Sessions
}

// GetGroups returns the value of Groups.
func (s *UpdateUserReq) GetGroups() []string {
	return s.Groups
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateUserReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UpdateUserReq) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UpdateUserReq) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UpdateUserReq) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UpdateUserReq) SetLastName(val OptString) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateUserReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *UpdateUserReq) SetLocked(val OptBool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *UpdateUserReq) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *UpdateUserReq) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *UpdateUserReq) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *UpdateUserReq) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *UpdateUserReq) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

// SetRecoveryCode sets the value of RecoveryCode.
func (s *UpdateUserReq) SetRecoveryCode(val OptString) {
	s.RecoveryCode = val
}

// SetOrganizations sets the value of Organizations.
func (s *UpdateUserReq) SetOrganizations(val []string) {
	s.Organizations = val
}

// SetSessions sets the value of Sessions.
func (s *UpdateUserReq) SetSessions(val []string) {
	s.Sessions = val
}

// SetGroups sets the value of Groups.
func (s *UpdateUserReq) SetGroups(val []string) {
	s.Groups = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserCreate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserCreate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *UserCreate) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UserCreate) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserCreate) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *UserCreate) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *UserCreate) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *UserCreate) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *UserCreate) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *UserCreate) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *UserCreate) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *UserCreate) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserCreate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserCreate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *UserCreate) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UserCreate) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserCreate) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserCreate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *UserCreate) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *UserCreate) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *UserCreate) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *UserCreate) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *UserCreate) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *UserCreate) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/User_GroupsList
type UserGroupsList struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	CreatedBy   OptString `json:"created_by"`
	UpdatedBy   OptString `json:"updated_by"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	LogoURL     string    `json:"logo_url"`
}

// GetID returns the value of ID.
func (s *UserGroupsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserGroupsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserGroupsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserGroupsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserGroupsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *UserGroupsList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UserGroupsList) GetDescription() string {
	return s.Description
}

// GetLogoURL returns the value of LogoURL.
func (s *UserGroupsList) GetLogoURL() string {
	return s.LogoURL
}

// SetID sets the value of ID.
func (s *UserGroupsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserGroupsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserGroupsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserGroupsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserGroupsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *UserGroupsList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UserGroupsList) SetDescription(val string) {
	s.Description = val
}

// SetLogoURL sets the value of LogoURL.
func (s *UserGroupsList) SetLogoURL(val string) {
	s.LogoURL = val
}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *UserList) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UserList) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserList) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *UserList) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *UserList) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *UserList) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *UserList) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *UserList) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *UserList) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *UserList) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *UserList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *UserList) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UserList) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserList) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *UserList) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *UserList) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *UserList) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *UserList) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *UserList) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *UserList) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

// Ref: #/components/schemas/User_OrganizationsList
type UserOrganizationsList struct {
	ID                   string    `json:"id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
	CreatedBy            OptString `json:"created_by"`
	UpdatedBy            OptString `json:"updated_by"`
	Name                 string    `json:"name"`
	Description          OptString `json:"description"`
	ParentOrganizationID OptString `json:"parent_organization_id"`
}

// GetID returns the value of ID.
func (s *UserOrganizationsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserOrganizationsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserOrganizationsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserOrganizationsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserOrganizationsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetName returns the value of Name.
func (s *UserOrganizationsList) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UserOrganizationsList) GetDescription() OptString {
	return s.Description
}

// GetParentOrganizationID returns the value of ParentOrganizationID.
func (s *UserOrganizationsList) GetParentOrganizationID() OptString {
	return s.ParentOrganizationID
}

// SetID sets the value of ID.
func (s *UserOrganizationsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserOrganizationsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserOrganizationsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserOrganizationsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserOrganizationsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetName sets the value of Name.
func (s *UserOrganizationsList) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UserOrganizationsList) SetDescription(val OptString) {
	s.Description = val
}

// SetParentOrganizationID sets the value of ParentOrganizationID.
func (s *UserOrganizationsList) SetParentOrganizationID(val OptString) {
	s.ParentOrganizationID = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserRead) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserRead) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *UserRead) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UserRead) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserRead) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *UserRead) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *UserRead) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *UserRead) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *UserRead) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *UserRead) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *UserRead) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *UserRead) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserRead) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserRead) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *UserRead) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UserRead) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserRead) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *UserRead) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *UserRead) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *UserRead) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *UserRead) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *UserRead) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *UserRead) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/User_SessionsList
type UserSessionsList struct {
	ID        string               `json:"id"`
	CreatedAt time.Time            `json:"created_at"`
	UpdatedAt time.Time            `json:"updated_at"`
	CreatedBy OptString            `json:"created_by"`
	UpdatedBy OptString            `json:"updated_by"`
	Type      UserSessionsListType `json:"type"`
	Disabled  bool                 `json:"disabled"`
	Token     string               `json:"token"`
	UserAgent OptString            `json:"user_agent"`
	Ips       string               `json:"ips"`
}

// GetID returns the value of ID.
func (s *UserSessionsList) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserSessionsList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserSessionsList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserSessionsList) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserSessionsList) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetType returns the value of Type.
func (s *UserSessionsList) GetType() UserSessionsListType {
	return s.Type
}

// GetDisabled returns the value of Disabled.
func (s *UserSessionsList) GetDisabled() bool {
	return s.Disabled
}

// GetToken returns the value of Token.
func (s *UserSessionsList) GetToken() string {
	return s.Token
}

// GetUserAgent returns the value of UserAgent.
func (s *UserSessionsList) GetUserAgent() OptString {
	return s.UserAgent
}

// GetIps returns the value of Ips.
func (s *UserSessionsList) GetIps() string {
	return s.Ips
}

// SetID sets the value of ID.
func (s *UserSessionsList) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserSessionsList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserSessionsList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserSessionsList) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserSessionsList) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetType sets the value of Type.
func (s *UserSessionsList) SetType(val UserSessionsListType) {
	s.Type = val
}

// SetDisabled sets the value of Disabled.
func (s *UserSessionsList) SetDisabled(val bool) {
	s.Disabled = val
}

// SetToken sets the value of Token.
func (s *UserSessionsList) SetToken(val string) {
	s.Token = val
}

// SetUserAgent sets the value of UserAgent.
func (s *UserSessionsList) SetUserAgent(val OptString) {
	s.UserAgent = val
}

// SetIps sets the value of Ips.
func (s *UserSessionsList) SetIps(val string) {
	s.Ips = val
}

type UserSessionsListType string

const (
	UserSessionsListTypeLocal       UserSessionsListType = "local"
	UserSessionsListTypeOAuth       UserSessionsListType = "oauth"
	UserSessionsListTypeAppPassword UserSessionsListType = "app_password"
)

// AllValues returns all UserSessionsListType values.
func (UserSessionsListType) AllValues() []UserSessionsListType {
	return []UserSessionsListType{
		UserSessionsListTypeLocal,
		UserSessionsListTypeOAuth,
		UserSessionsListTypeAppPassword,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UserSessionsListType) MarshalText() ([]byte, error) {
	switch s {
	case UserSessionsListTypeLocal:
		return []byte(s), nil
	case UserSessionsListTypeOAuth:
		return []byte(s), nil
	case UserSessionsListTypeAppPassword:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UserSessionsListType) UnmarshalText(data []byte) error {
	switch UserSessionsListType(data) {
	case UserSessionsListTypeLocal:
		*s = UserSessionsListTypeLocal
		return nil
	case UserSessionsListTypeOAuth:
		*s = UserSessionsListTypeOAuth
		return nil
	case UserSessionsListTypeAppPassword:
		*s = UserSessionsListTypeAppPassword
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID              string      `json:"id"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	CreatedBy       OptString   `json:"created_by"`
	UpdatedBy       OptString   `json:"updated_by"`
	Email           string      `json:"email"`
	FirstName       string      `json:"first_name"`
	LastName        string      `json:"last_name"`
	DisplayName     string      `json:"display_name"`
	Locked          bool        `json:"locked"`
	AvatarRemoteURL OptString   `json:"avatar_remote_url"`
	AvatarLocalFile OptString   `json:"avatar_local_file"`
	AvatarUpdatedAt OptDateTime `json:"avatar_updated_at"`
	SilencedAt      OptDateTime `json:"silenced_at"`
	SuspendedAt     OptDateTime `json:"suspended_at"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() string {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UserUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *UserUpdate) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *UserUpdate) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UserUpdate) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserUpdate) GetLastName() string {
	return s.LastName
}

// GetDisplayName returns the value of DisplayName.
func (s *UserUpdate) GetDisplayName() string {
	return s.DisplayName
}

// GetLocked returns the value of Locked.
func (s *UserUpdate) GetLocked() bool {
	return s.Locked
}

// GetAvatarRemoteURL returns the value of AvatarRemoteURL.
func (s *UserUpdate) GetAvatarRemoteURL() OptString {
	return s.AvatarRemoteURL
}

// GetAvatarLocalFile returns the value of AvatarLocalFile.
func (s *UserUpdate) GetAvatarLocalFile() OptString {
	return s.AvatarLocalFile
}

// GetAvatarUpdatedAt returns the value of AvatarUpdatedAt.
func (s *UserUpdate) GetAvatarUpdatedAt() OptDateTime {
	return s.AvatarUpdatedAt
}

// GetSilencedAt returns the value of SilencedAt.
func (s *UserUpdate) GetSilencedAt() OptDateTime {
	return s.SilencedAt
}

// GetSuspendedAt returns the value of SuspendedAt.
func (s *UserUpdate) GetSuspendedAt() OptDateTime {
	return s.SuspendedAt
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val string) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UserUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *UserUpdate) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *UserUpdate) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UserUpdate) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserUpdate) SetLastName(val string) {
	s.LastName = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserUpdate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetLocked sets the value of Locked.
func (s *UserUpdate) SetLocked(val bool) {
	s.Locked = val
}

// SetAvatarRemoteURL sets the value of AvatarRemoteURL.
func (s *UserUpdate) SetAvatarRemoteURL(val OptString) {
	s.AvatarRemoteURL = val
}

// SetAvatarLocalFile sets the value of AvatarLocalFile.
func (s *UserUpdate) SetAvatarLocalFile(val OptString) {
	s.AvatarLocalFile = val
}

// SetAvatarUpdatedAt sets the value of AvatarUpdatedAt.
func (s *UserUpdate) SetAvatarUpdatedAt(val OptDateTime) {
	s.AvatarUpdatedAt = val
}

// SetSilencedAt sets the value of SilencedAt.
func (s *UserUpdate) SetSilencedAt(val OptDateTime) {
	s.SilencedAt = val
}

// SetSuspendedAt sets the value of SuspendedAt.
func (s *UserUpdate) SetSuspendedAt(val OptDateTime) {
	s.SuspendedAt = val
}

func (*UserUpdate) updateUserRes() {}
