{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/entitlements": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "summary": "List Entitlements",
        "description": "List Entitlements.",
        "operationId": "listEntitlement",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Entitlement list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntitlementList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Create a new Entitlement",
        "description": "Creates a new Entitlement and persists it to storage.",
        "operationId": "createEntitlement",
        "requestBody": {
          "description": "Entitlement to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "tier": {
                    "type": "string",
                    "enum": [
                      "free",
                      "pro",
                      "enterprise"
                    ],
                    "default": "free"
                  },
                  "external_customer_id": {
                    "type": "string"
                  },
                  "external_subscription_id": {
                    "type": "string"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "upgraded_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "upgraded_tier": {
                    "type": "string"
                  },
                  "downgraded_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "downgraded_tier": {
                    "type": "string"
                  },
                  "cancelled": {
                    "type": "boolean"
                  },
                  "owner": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "tier",
                  "cancelled"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entitlement created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/entitlements/{id}": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Find a Entitlement by ID",
        "description": "Finds the Entitlement with the requested ID and returns it.",
        "operationId": "readEntitlement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Entitlement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entitlement with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Deletes a Entitlement by ID",
        "description": "Deletes the Entitlement with the requested ID.",
        "operationId": "deleteEntitlement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Entitlement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Entitlement with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Updates a Entitlement",
        "description": "Updates a Entitlement and persists changes to storage.",
        "operationId": "updateEntitlement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Entitlement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Entitlement properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "tier": {
                    "type": "string",
                    "enum": [
                      "free",
                      "pro",
                      "enterprise"
                    ],
                    "default": "free"
                  },
                  "external_customer_id": {
                    "type": "string"
                  },
                  "external_subscription_id": {
                    "type": "string"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "upgraded_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "upgraded_tier": {
                    "type": "string"
                  },
                  "downgraded_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "downgraded_tier": {
                    "type": "string"
                  },
                  "cancelled": {
                    "type": "boolean"
                  },
                  "owner": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Entitlement updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/entitlements/{id}/owner": {
      "get": {
        "tags": [
          "Entitlement"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the Entitlement with the given ID",
        "operationId": "readEntitlementOwner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Entitlement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to Entitlement with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entitlement_OwnerRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/group-settings": {
      "get": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "List GroupSettings",
        "description": "List GroupSettings.",
        "operationId": "listGroupSetting",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result GroupSetting list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupSettingList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "Create a new GroupSetting",
        "description": "Creates a new GroupSetting and persists it to storage.",
        "operationId": "createGroupSetting",
        "requestBody": {
          "description": "GroupSetting to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "PRIVATE"
                    ],
                    "default": "PUBLIC"
                  },
                  "join_policy": {
                    "type": "string",
                    "enum": [
                      "OPEN",
                      "INVITE_ONLY",
                      "APPLICATION_ONLY",
                      "INVITE_OR_APPLICATION"
                    ],
                    "default": "OPEN"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sync_to_slack": {
                    "type": "boolean"
                  },
                  "sync_to_github": {
                    "type": "boolean"
                  },
                  "group": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "visibility",
                  "join_policy",
                  "tags",
                  "sync_to_slack",
                  "sync_to_github"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "GroupSetting created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/group-settings/{id}": {
      "get": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "Find a GroupSetting by ID",
        "description": "Finds the GroupSetting with the requested ID and returns it.",
        "operationId": "readGroupSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the GroupSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GroupSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "Deletes a GroupSetting by ID",
        "description": "Deletes the GroupSetting with the requested ID.",
        "operationId": "deleteGroupSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the GroupSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "GroupSetting with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "Updates a GroupSetting",
        "description": "Updates a GroupSetting and persists changes to storage.",
        "operationId": "updateGroupSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the GroupSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "GroupSetting properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "PRIVATE"
                    ],
                    "default": "PUBLIC"
                  },
                  "join_policy": {
                    "type": "string",
                    "enum": [
                      "OPEN",
                      "INVITE_ONLY",
                      "APPLICATION_ONLY",
                      "INVITE_OR_APPLICATION"
                    ],
                    "default": "OPEN"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sync_to_slack": {
                    "type": "boolean"
                  },
                  "sync_to_github": {
                    "type": "boolean"
                  },
                  "group": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "GroupSetting updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/group-settings/{id}/group": {
      "get": {
        "tags": [
          "GroupSetting"
        ],
        "summary": "Find the attached Group",
        "description": "Find the attached Group of the GroupSetting with the given ID",
        "operationId": "readGroupSettingGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the GroupSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group attached to GroupSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSetting_GroupRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List Groups",
        "description": "List Groups.",
        "operationId": "listGroup",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Group list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Create a new Group",
        "description": "Creates a new Group and persists it to storage.",
        "operationId": "createGroup",
        "requestBody": {
          "description": "Group to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "logo_url": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "setting": {
                    "type": "string"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "owner": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "name",
                  "description",
                  "logo_url",
                  "display_name",
                  "setting"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Group created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Find a Group by ID",
        "description": "Finds the Group with the requested ID and returns it.",
        "operationId": "readGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Deletes a Group by ID",
        "description": "Deletes the Group with the requested ID.",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Group with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "summary": "Updates a Group",
        "description": "Updates a Group and persists changes to storage.",
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Group properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "logo_url": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "setting": {
                    "type": "string"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "owner": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Group updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}/owner": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the Group with the given ID",
        "operationId": "readGroupOwner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to Group with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group_OwnerRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}/setting": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Find the attached GroupSetting",
        "description": "Find the attached GroupSetting of the Group with the given ID",
        "operationId": "readGroupSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GroupSetting attached to Group with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group_SettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}/users": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List attached Users",
        "description": "List attached Users.",
        "operationId": "listGroupUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Groups list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group_UsersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "List Integrations",
        "description": "List Integrations.",
        "operationId": "listIntegration",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Integration list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Create a new Integration",
        "description": "Creates a new Integration and persists it to storage.",
        "operationId": "createIntegration",
        "requestBody": {
          "description": "Integration to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "secret_name": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "name",
                  "kind",
                  "secret_name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integration created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/integrations/{id}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Find a Integration by ID",
        "description": "Finds the Integration with the requested ID and returns it.",
        "operationId": "readIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Deletes a Integration by ID",
        "description": "Deletes the Integration with the requested ID.",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Integration with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Integration"
        ],
        "summary": "Updates a Integration",
        "description": "Updates a Integration and persists changes to storage.",
        "operationId": "updateIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Integration properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integration updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/integrations/{id}/owner": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the Integration with the given ID",
        "operationId": "readIntegrationOwner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to Integration with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration_OwnerRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/oauth-providers": {
      "get": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "List OauthProviders",
        "description": "List OauthProviders.",
        "operationId": "listOauthProvider",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OauthProvider list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OauthProviderList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "Create a new OauthProvider",
        "description": "Creates a new OauthProvider and persists it to storage.",
        "operationId": "createOauthProvider",
        "requestBody": {
          "description": "OauthProvider to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string"
                  },
                  "client_secret": {
                    "type": "string"
                  },
                  "redirect_url": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  },
                  "auth_url": {
                    "type": "string"
                  },
                  "token_url": {
                    "type": "string"
                  },
                  "auth_style": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 255,
                    "minimum": 0
                  },
                  "info_url": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "name",
                  "client_id",
                  "client_secret",
                  "redirect_url",
                  "scopes",
                  "auth_url",
                  "token_url",
                  "auth_style",
                  "info_url"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OauthProvider created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/oauth-providers/{id}": {
      "get": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "Find a OauthProvider by ID",
        "description": "Finds the OauthProvider with the requested ID and returns it.",
        "operationId": "readOauthProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OauthProvider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OauthProvider with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "Deletes a OauthProvider by ID",
        "description": "Deletes the OauthProvider with the requested ID.",
        "operationId": "deleteOauthProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OauthProvider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OauthProvider with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "Updates a OauthProvider",
        "description": "Updates a OauthProvider and persists changes to storage.",
        "operationId": "updateOauthProvider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OauthProvider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "OauthProvider properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string"
                  },
                  "client_secret": {
                    "type": "string"
                  },
                  "redirect_url": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  },
                  "auth_url": {
                    "type": "string"
                  },
                  "token_url": {
                    "type": "string"
                  },
                  "auth_style": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 255,
                    "minimum": 0
                  },
                  "info_url": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OauthProvider updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProviderUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/oauth-providers/{id}/owner": {
      "get": {
        "tags": [
          "OauthProvider"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the OauthProvider with the given ID",
        "operationId": "readOauthProviderOwner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OauthProvider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to OauthProvider with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthProvider_OwnerRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-settings": {
      "get": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "List OrganizationSettings",
        "description": "List OrganizationSettings.",
        "operationId": "listOrganizationSetting",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result OrganizationSetting list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSettingList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "Create a new OrganizationSetting",
        "description": "Creates a new OrganizationSetting and persists it to storage.",
        "operationId": "createOrganizationSetting",
        "requestBody": {
          "description": "OrganizationSetting to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sso_cert": {
                    "type": "string"
                  },
                  "sso_entrypoint": {
                    "type": "string"
                  },
                  "sso_issuer": {
                    "type": "string"
                  },
                  "billing_contact": {
                    "type": "string"
                  },
                  "billing_email": {
                    "type": "string"
                  },
                  "billing_phone": {
                    "type": "string"
                  },
                  "billing_address": {
                    "type": "string"
                  },
                  "tax_identifier": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "organization": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "domains",
                  "sso_cert",
                  "sso_entrypoint",
                  "sso_issuer",
                  "billing_contact",
                  "billing_email",
                  "billing_phone",
                  "billing_address",
                  "tax_identifier"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationSetting created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettingCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-settings/{id}": {
      "get": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "Find a OrganizationSetting by ID",
        "description": "Finds the OrganizationSetting with the requested ID and returns it.",
        "operationId": "readOrganizationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "Deletes a OrganizationSetting by ID",
        "description": "Deletes the OrganizationSetting with the requested ID.",
        "operationId": "deleteOrganizationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OrganizationSetting with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "Updates a OrganizationSetting",
        "description": "Updates a OrganizationSetting and persists changes to storage.",
        "operationId": "updateOrganizationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "OrganizationSetting properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sso_cert": {
                    "type": "string"
                  },
                  "sso_entrypoint": {
                    "type": "string"
                  },
                  "sso_issuer": {
                    "type": "string"
                  },
                  "billing_contact": {
                    "type": "string"
                  },
                  "billing_email": {
                    "type": "string"
                  },
                  "billing_phone": {
                    "type": "string"
                  },
                  "billing_address": {
                    "type": "string"
                  },
                  "tax_identifier": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "organization": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OrganizationSetting updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSettingUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organization-settings/{id}/organization": {
      "get": {
        "tags": [
          "OrganizationSetting"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the OrganizationSetting with the given ID",
        "operationId": "readOrganizationSettingOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the OrganizationSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to OrganizationSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationSetting_OrganizationRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List Organizations",
        "description": "List Organizations.",
        "operationId": "listOrganization",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organization list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create a new Organization",
        "description": "Creates a new Organization and persists it to storage.",
        "operationId": "createOrganization",
        "requestBody": {
          "description": "Organization to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "parent_organization_id": {
                    "type": "string"
                  },
                  "parent": {
                    "type": "string"
                  },
                  "children": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "integrations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "setting": {
                    "type": "string"
                  },
                  "entitlements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "oauthprovider": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "name",
                  "display_name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Find a Organization by ID",
        "description": "Finds the Organization with the requested ID and returns it.",
        "operationId": "readOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Deletes a Organization by ID",
        "description": "Deletes the Organization with the requested ID.",
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organization with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Organization"
        ],
        "summary": "Updates a Organization",
        "description": "Updates a Organization and persists changes to storage.",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Organization properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "deleted_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deleted_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "parent": {
                    "type": "string"
                  },
                  "children": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "integrations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "setting": {
                    "type": "string"
                  },
                  "entitlements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "oauthprovider": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Organization updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/children": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Childrens",
        "description": "List attached Childrens.",
        "operationId": "listOrganizationChildren",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_ChildrenList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/entitlements": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Entitlements",
        "description": "List attached Entitlements.",
        "operationId": "listOrganizationEntitlements",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_EntitlementsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/groups": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Groups",
        "description": "List attached Groups.",
        "operationId": "listOrganizationGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_GroupsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/integrations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Integrations",
        "description": "List attached Integrations.",
        "operationId": "listOrganizationIntegrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_IntegrationsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/oauthprovider": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Oauthproviders",
        "description": "List attached Oauthproviders.",
        "operationId": "listOrganizationOauthprovider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_OauthproviderList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/parent": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Find the attached Organization",
        "description": "Find the attached Organization of the Organization with the given ID",
        "operationId": "readOrganizationParent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization attached to Organization with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization_ParentRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/setting": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Find the attached OrganizationSetting",
        "description": "Find the attached OrganizationSetting of the Organization with the given ID",
        "operationId": "readOrganizationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OrganizationSetting attached to Organization with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization_SettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/organizations/{id}/users": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List attached Users",
        "description": "List attached Users.",
        "operationId": "listOrganizationUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Organization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Organizations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization_UsersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/personal-access-tokens": {
      "get": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "List PersonalAccessTokens",
        "description": "List PersonalAccessTokens.",
        "operationId": "listPersonalAccessToken",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result PersonalAccessToken list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonalAccessTokenList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "Create a new PersonalAccessToken",
        "description": "Creates a new PersonalAccessToken and persists it to storage.",
        "operationId": "createPersonalAccessToken",
        "requestBody": {
          "description": "PersonalAccessToken to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "abilities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expiration_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_used_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "name",
                  "user_id",
                  "token",
                  "expiration_at",
                  "user"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PersonalAccessToken created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/personal-access-tokens/{id}": {
      "get": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "Find a PersonalAccessToken by ID",
        "description": "Finds the PersonalAccessToken with the requested ID and returns it.",
        "operationId": "readPersonalAccessToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the PersonalAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PersonalAccessToken with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "Deletes a PersonalAccessToken by ID",
        "description": "Deletes the PersonalAccessToken with the requested ID.",
        "operationId": "deletePersonalAccessToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the PersonalAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "PersonalAccessToken with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "Updates a PersonalAccessToken",
        "description": "Updates a PersonalAccessToken and persists changes to storage.",
        "operationId": "updatePersonalAccessToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the PersonalAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "PersonalAccessToken properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "abilities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expiration_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_used_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PersonalAccessToken updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessTokenUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/personal-access-tokens/{id}/user": {
      "get": {
        "tags": [
          "PersonalAccessToken"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the PersonalAccessToken with the given ID",
        "operationId": "readPersonalAccessTokenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the PersonalAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to PersonalAccessToken with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalAccessToken_UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/refresh-tokens": {
      "get": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "List RefreshTokens",
        "description": "List RefreshTokens.",
        "operationId": "listRefreshToken",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result RefreshToken list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefreshTokenList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "Create a new RefreshToken",
        "description": "Creates a new RefreshToken and persists it to storage.",
        "operationId": "createRefreshToken",
        "requestBody": {
          "description": "RefreshToken to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nonce": {
                    "type": "string"
                  },
                  "claims_user_id": {
                    "type": "string"
                  },
                  "claims_username": {
                    "type": "string"
                  },
                  "claims_email": {
                    "type": "string"
                  },
                  "claims_email_verified": {
                    "type": "boolean"
                  },
                  "claims_groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "claims_preferred_username": {
                    "type": "string"
                  },
                  "connector_id": {
                    "type": "string"
                  },
                  "connector_data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "token": {
                    "type": "string"
                  },
                  "obsolete_token": {
                    "type": "string"
                  },
                  "last_used": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "nonce",
                  "claims_user_id",
                  "claims_username",
                  "claims_email",
                  "claims_email_verified",
                  "claims_preferred_username",
                  "connector_id",
                  "token",
                  "obsolete_token",
                  "last_used"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "RefreshToken created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/refresh-tokens/{id}": {
      "get": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "Find a RefreshToken by ID",
        "description": "Finds the RefreshToken with the requested ID and returns it.",
        "operationId": "readRefreshToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the RefreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RefreshToken with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "Deletes a RefreshToken by ID",
        "description": "Deletes the RefreshToken with the requested ID.",
        "operationId": "deleteRefreshToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the RefreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "RefreshToken with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "Updates a RefreshToken",
        "description": "Updates a RefreshToken and persists changes to storage.",
        "operationId": "updateRefreshToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the RefreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "RefreshToken properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nonce": {
                    "type": "string"
                  },
                  "claims_user_id": {
                    "type": "string"
                  },
                  "claims_username": {
                    "type": "string"
                  },
                  "claims_email": {
                    "type": "string"
                  },
                  "claims_email_verified": {
                    "type": "boolean"
                  },
                  "claims_groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "claims_preferred_username": {
                    "type": "string"
                  },
                  "connector_id": {
                    "type": "string"
                  },
                  "connector_data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "token": {
                    "type": "string"
                  },
                  "obsolete_token": {
                    "type": "string"
                  },
                  "last_used": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "RefreshToken updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/refresh-tokens/{id}/user": {
      "get": {
        "tags": [
          "RefreshToken"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the RefreshToken with the given ID",
        "operationId": "readRefreshTokenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the RefreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to RefreshToken with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshToken_UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "List Sessions",
        "description": "List Sessions.",
        "operationId": "listSession",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Session list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Create a new Session",
        "description": "Creates a new Session and persists it to storage.",
        "operationId": "createSession",
        "requestBody": {
          "description": "Session to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "local",
                      "oauth",
                      "app_password"
                    ]
                  },
                  "disabled": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "string"
                  },
                  "user_agent": {
                    "type": "string"
                  },
                  "ips": {
                    "type": "string"
                  },
                  "users": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "type",
                  "disabled",
                  "token",
                  "ips"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Find a Session by ID",
        "description": "Finds the Session with the requested ID and returns it.",
        "operationId": "readSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Deletes a Session by ID",
        "description": "Deletes the Session with the requested ID.",
        "operationId": "deleteSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Session with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Session"
        ],
        "summary": "Updates a Session",
        "description": "Updates a Session and persists changes to storage.",
        "operationId": "updateSession",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Session properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "disabled": {
                    "type": "boolean"
                  },
                  "user_agent": {
                    "type": "string"
                  },
                  "ips": {
                    "type": "string"
                  },
                  "users": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Session updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/sessions/{id}/users": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the Session with the given ID",
        "operationId": "readSessionUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to Session with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session_UsersRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user-settings": {
      "get": {
        "tags": [
          "UserSetting"
        ],
        "summary": "List UserSettings",
        "description": "List UserSettings.",
        "operationId": "listUserSetting",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result UserSetting list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSettingList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "UserSetting"
        ],
        "summary": "Create a new UserSetting",
        "description": "Creates a new UserSetting and persists it to storage.",
        "operationId": "createUserSetting",
        "requestBody": {
          "description": "UserSetting to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "silenced_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "suspended_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "recovery_code": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DEACTIVATED",
                      "SUSPENDED"
                    ],
                    "default": "ACTIVE"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "USER",
                      "ADMIN",
                      "OWNER"
                    ],
                    "default": "USER"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email_confirmed": {
                    "type": "boolean"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "locked",
                  "status",
                  "role",
                  "permissions",
                  "email_confirmed",
                  "tags"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "UserSetting created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user-settings/{id}": {
      "get": {
        "tags": [
          "UserSetting"
        ],
        "summary": "Find a UserSetting by ID",
        "description": "Finds the UserSetting with the requested ID and returns it.",
        "operationId": "readUserSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the UserSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UserSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "UserSetting"
        ],
        "summary": "Deletes a UserSetting by ID",
        "description": "Deletes the UserSetting with the requested ID.",
        "operationId": "deleteUserSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the UserSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "UserSetting with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "UserSetting"
        ],
        "summary": "Updates a UserSetting",
        "description": "Updates a UserSetting and persists changes to storage.",
        "operationId": "updateUserSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the UserSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "UserSetting properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "locked": {
                    "type": "boolean"
                  },
                  "silenced_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "suspended_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "recovery_code": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE",
                      "DEACTIVATED",
                      "SUSPENDED"
                    ],
                    "default": "ACTIVE"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "USER",
                      "ADMIN",
                      "OWNER"
                    ],
                    "default": "USER"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email_confirmed": {
                    "type": "boolean"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "user": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "UserSetting updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user-settings/{id}/user": {
      "get": {
        "tags": [
          "UserSetting"
        ],
        "summary": "Find the attached User",
        "description": "Find the attached User of the UserSetting with the given ID",
        "operationId": "readUserSettingUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the UserSetting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attached to UserSetting with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSetting_UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List Users",
        "description": "List Users.",
        "operationId": "listUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result User list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new User",
        "description": "Creates a new User and persists it to storage.",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "avatar_remote_url": {
                    "type": "string"
                  },
                  "avatar_local_file": {
                    "type": "string"
                  },
                  "avatar_updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_seen": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "passwordHash": {
                    "type": "string"
                  },
                  "sub": {
                    "type": "string"
                  },
                  "oauth": {
                    "type": "boolean"
                  },
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sessions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "personal_access_tokens": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "setting": {
                    "type": "string"
                  },
                  "refreshtoken": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "email",
                  "first_name",
                  "last_name",
                  "display_name",
                  "oauth",
                  "setting"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find a User by ID",
        "description": "Finds the User with the requested ID and returns it.",
        "operationId": "readUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes a User by ID",
        "description": "Deletes the User with the requested ID.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Updates a User",
        "description": "Updates a User and persists changes to storage.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "avatar_remote_url": {
                    "type": "string"
                  },
                  "avatar_local_file": {
                    "type": "string"
                  },
                  "avatar_updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_seen": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "passwordHash": {
                    "type": "string"
                  },
                  "sub": {
                    "type": "string"
                  },
                  "oauth": {
                    "type": "boolean"
                  },
                  "organizations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sessions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "personal_access_tokens": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "setting": {
                    "type": "string"
                  },
                  "refreshtoken": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/groups": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Groups",
        "description": "List attached Groups.",
        "operationId": "listUserGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_GroupsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/organizations": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Organizations",
        "description": "List attached Organizations.",
        "operationId": "listUserOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_OrganizationsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/personal-access-tokens": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached PersonalAccessTokens",
        "description": "List attached PersonalAccessTokens.",
        "operationId": "listUserPersonalAccessTokens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_PersonalAccessTokensList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/refreshtoken": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Refreshtokens",
        "description": "List attached Refreshtokens.",
        "operationId": "listUserRefreshtoken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_RefreshtokenList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/sessions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List attached Sessions",
        "description": "List attached Sessions.",
        "operationId": "listUserSessions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Users list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User_SessionsList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}/setting": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find the attached UserSetting",
        "description": "Find the attached UserSetting of the User with the given ID",
        "operationId": "readUserSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UserSetting attached to User with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_SettingRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Entitlement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "EntitlementCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "EntitlementList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "EntitlementRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "EntitlementUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "Entitlement_OwnerRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "setting": {
            "$ref": "#/components/schemas/GroupSetting"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name",
          "setting"
        ]
      },
      "GroupCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "GroupList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "GroupRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "GroupSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "GroupSettingCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "GroupSettingList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "GroupSettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "GroupSettingUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "GroupSetting_GroupRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "GroupUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "Group_OwnerRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Group_SettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "default": "PUBLIC"
          },
          "join_policy": {
            "type": "string",
            "enum": [
              "OPEN",
              "INVITE_ONLY",
              "APPLICATION_ONLY",
              "INVITE_OR_APPLICATION"
            ],
            "default": "OPEN"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sync_to_slack": {
            "type": "boolean"
          },
          "sync_to_github": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "visibility",
          "join_policy",
          "tags",
          "sync_to_slack",
          "sync_to_github"
        ]
      },
      "Group_UsersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "IntegrationCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "IntegrationList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "IntegrationRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "IntegrationUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "Integration_OwnerRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OauthProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "client_secret",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "OauthProviderCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "OauthProviderList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "OauthProviderRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "OauthProviderUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "OauthProvider_OwnerRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Organization"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          },
          "setting": {
            "$ref": "#/components/schemas/OrganizationSetting"
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entitlement"
            }
          },
          "oauthprovider": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OauthProvider"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OrganizationCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OrganizationList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OrganizationRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OrganizationSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "OrganizationSettingCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "OrganizationSettingList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "OrganizationSettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "OrganizationSettingUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "OrganizationSetting_OrganizationRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "OrganizationUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Organization_ChildrenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Organization_EntitlementsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ],
            "default": "free"
          },
          "external_customer_id": {
            "type": "string"
          },
          "external_subscription_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "upgraded_tier": {
            "type": "string"
          },
          "downgraded_at": {
            "type": "string",
            "format": "date-time"
          },
          "downgraded_tier": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "tier",
          "cancelled"
        ]
      },
      "Organization_GroupsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "Organization_IntegrationsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "secret_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "kind",
          "secret_name"
        ]
      },
      "Organization_OauthproviderList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "auth_url": {
            "type": "string"
          },
          "token_url": {
            "type": "string"
          },
          "auth_style": {
            "type": "integer",
            "format": "int32",
            "maximum": 255,
            "minimum": 0
          },
          "info_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "client_id",
          "redirect_url",
          "scopes",
          "auth_url",
          "token_url",
          "auth_style",
          "info_url"
        ]
      },
      "Organization_ParentRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "Organization_SettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sso_cert": {
            "type": "string"
          },
          "sso_entrypoint": {
            "type": "string"
          },
          "sso_issuer": {
            "type": "string"
          },
          "billing_contact": {
            "type": "string"
          },
          "billing_email": {
            "type": "string"
          },
          "billing_phone": {
            "type": "string"
          },
          "billing_address": {
            "type": "string"
          },
          "tax_identifier": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "domains",
          "sso_cert",
          "sso_entrypoint",
          "sso_issuer",
          "billing_contact",
          "billing_email",
          "billing_phone",
          "billing_address",
          "tax_identifier"
        ]
      },
      "Organization_UsersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "PersonalAccessToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "token",
          "expiration_at",
          "user"
        ]
      },
      "PersonalAccessTokenCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "expiration_at"
        ]
      },
      "PersonalAccessTokenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "expiration_at"
        ]
      },
      "PersonalAccessTokenRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "expiration_at"
        ]
      },
      "PersonalAccessTokenUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "expiration_at"
        ]
      },
      "PersonalAccessToken_UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "RefreshTokenCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "RefreshTokenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "RefreshTokenRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "RefreshTokenUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "RefreshToken_UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "SessionCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "SessionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "SessionRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "SessionUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "Session_UsersRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "passwordHash": {
            "type": "string"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "personal_access_tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalAccessToken"
            }
          },
          "setting": {
            "$ref": "#/components/schemas/UserSetting"
          },
          "refreshtoken": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefreshToken"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth",
          "setting"
        ]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "UserList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "UserSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "recovery_code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      },
      "UserSettingCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      },
      "UserSettingList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      },
      "UserSettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      },
      "UserSettingUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      },
      "UserSetting_UserRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_remote_url": {
            "type": "string"
          },
          "avatar_local_file": {
            "type": "string"
          },
          "avatar_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "sub": {
            "type": "string"
          },
          "oauth": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "email",
          "first_name",
          "last_name",
          "display_name",
          "oauth"
        ]
      },
      "User_GroupsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "description",
          "logo_url",
          "display_name"
        ]
      },
      "User_OrganizationsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_organization_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "display_name"
        ]
      },
      "User_PersonalAccessTokensList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "expiration_at"
        ]
      },
      "User_RefreshtokenList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nonce": {
            "type": "string"
          },
          "claims_user_id": {
            "type": "string"
          },
          "claims_username": {
            "type": "string"
          },
          "claims_email": {
            "type": "string"
          },
          "claims_email_verified": {
            "type": "boolean"
          },
          "claims_groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claims_preferred_username": {
            "type": "string"
          },
          "connector_id": {
            "type": "string"
          },
          "connector_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "obsolete_token": {
            "type": "string"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "client_id",
          "nonce",
          "claims_user_id",
          "claims_username",
          "claims_email",
          "claims_email_verified",
          "claims_preferred_username",
          "connector_id",
          "token",
          "obsolete_token",
          "last_used"
        ]
      },
      "User_SessionsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "local",
              "oauth",
              "app_password"
            ]
          },
          "disabled": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ips": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "type",
          "disabled",
          "token",
          "ips"
        ]
      },
      "User_SettingRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "silenced_at": {
            "type": "string",
            "format": "date-time"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DEACTIVATED",
              "SUSPENDED"
            ],
            "default": "ACTIVE"
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "OWNER"
            ],
            "default": "USER"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_confirmed": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at",
          "locked",
          "status",
          "role",
          "permissions",
          "email_confirmed",
          "tags"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}